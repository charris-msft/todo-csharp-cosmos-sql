{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.10.13.619",
      "templateHash": "11205904034953877939"
    }
  },
  "parameters": {
    "environmentName": {
      "type": "string",
      "metadata": {
        "description": "Name of the the environment which is used to generate a short unique hash used in all resources."
      },
      "maxLength": 64,
      "minLength": 1
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Primary location for all resources"
      },
      "minLength": 1
    },
    "principalId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Id of the user or app to assign application roles"
      }
    }
  },
  "variables": {
    "$fxv#0": {
      "analysisServicesServers": "as",
      "apiManagementService": "apim-",
      "appConfigurationConfigurationStores": "appcs-",
      "appManagedEnvironments": "cae-",
      "appContainerApps": "ca-",
      "authorizationPolicyDefinitions": "policy-",
      "automationAutomationAccounts": "aa-",
      "blueprintBlueprints": "bp-",
      "blueprintBlueprintsArtifacts": "bpa-",
      "cacheRedis": "redis-",
      "cdnProfiles": "cdnp-",
      "cdnProfilesEndpoints": "cdne-",
      "cognitiveServicesAccounts": "cog-",
      "cognitiveServicesFormRecognizer": "cog-fr-",
      "cognitiveServicesTextAnalytics": "cog-ta-",
      "computeAvailabilitySets": "avail-",
      "computeCloudServices": "cld-",
      "computeDiskEncryptionSets": "des",
      "computeDisks": "disk",
      "computeDisksOs": "osdisk",
      "computeGalleries": "gal",
      "computeSnapshots": "snap-",
      "computeVirtualMachines": "vm",
      "computeVirtualMachineScaleSets": "vmss-",
      "containerInstanceContainerGroups": "ci",
      "containerRegistryRegistries": "cr",
      "containerServiceManagedClusters": "aks-",
      "databricksWorkspaces": "dbw-",
      "dataFactoryFactories": "adf-",
      "dataLakeAnalyticsAccounts": "dla",
      "dataLakeStoreAccounts": "dls",
      "dataMigrationServices": "dms-",
      "dBforMySQLServers": "mysql-",
      "dBforPostgreSQLServers": "psql-",
      "devicesIotHubs": "iot-",
      "devicesProvisioningServices": "provs-",
      "devicesProvisioningServicesCertificates": "pcert-",
      "documentDBDatabaseAccounts": "cosmos-",
      "eventGridDomains": "evgd-",
      "eventGridDomainsTopics": "evgt-",
      "eventGridEventSubscriptions": "evgs-",
      "eventHubNamespaces": "evhns-",
      "eventHubNamespacesEventHubs": "evh-",
      "hdInsightClustersHadoop": "hadoop-",
      "hdInsightClustersHbase": "hbase-",
      "hdInsightClustersKafka": "kafka-",
      "hdInsightClustersMl": "mls-",
      "hdInsightClustersSpark": "spark-",
      "hdInsightClustersStorm": "storm-",
      "hybridComputeMachines": "arcs-",
      "insightsActionGroups": "ag-",
      "insightsComponents": "appi-",
      "keyVaultVaults": "kv-",
      "kubernetesConnectedClusters": "arck",
      "kustoClusters": "dec",
      "kustoClustersDatabases": "dedb",
      "logicIntegrationAccounts": "ia-",
      "logicWorkflows": "logic-",
      "machineLearningServicesWorkspaces": "mlw-",
      "managedIdentityUserAssignedIdentities": "id-",
      "managementManagementGroups": "mg-",
      "migrateAssessmentProjects": "migr-",
      "networkApplicationGateways": "agw-",
      "networkApplicationSecurityGroups": "asg-",
      "networkAzureFirewalls": "afw-",
      "networkBastionHosts": "bas-",
      "networkConnections": "con-",
      "networkDnsZones": "dnsz-",
      "networkExpressRouteCircuits": "erc-",
      "networkFirewallPolicies": "afwp-",
      "networkFirewallPoliciesWebApplication": "waf",
      "networkFirewallPoliciesRuleGroups": "wafrg",
      "networkFrontDoors": "fd-",
      "networkFrontdoorWebApplicationFirewallPolicies": "fdfp-",
      "networkLoadBalancersExternal": "lbe-",
      "networkLoadBalancersInternal": "lbi-",
      "networkLoadBalancersInboundNatRules": "rule-",
      "networkLocalNetworkGateways": "lgw-",
      "networkNatGateways": "ng-",
      "networkNetworkInterfaces": "nic-",
      "networkNetworkSecurityGroups": "nsg-",
      "networkNetworkSecurityGroupsSecurityRules": "nsgsr-",
      "networkNetworkWatchers": "nw-",
      "networkPrivateDnsZones": "pdnsz-",
      "networkPrivateLinkServices": "pl-",
      "networkPublicIPAddresses": "pip-",
      "networkPublicIPPrefixes": "ippre-",
      "networkRouteFilters": "rf-",
      "networkRouteTables": "rt-",
      "networkRouteTablesRoutes": "udr-",
      "networkTrafficManagerProfiles": "traf-",
      "networkVirtualNetworkGateways": "vgw-",
      "networkVirtualNetworks": "vnet-",
      "networkVirtualNetworksSubnets": "snet-",
      "networkVirtualNetworksVirtualNetworkPeerings": "peer-",
      "networkVirtualWans": "vwan-",
      "networkVpnGateways": "vpng-",
      "networkVpnGatewaysVpnConnections": "vcn-",
      "networkVpnGatewaysVpnSites": "vst-",
      "notificationHubsNamespaces": "ntfns-",
      "notificationHubsNamespacesNotificationHubs": "ntf-",
      "operationalInsightsWorkspaces": "log-",
      "portalDashboards": "dash-",
      "powerBIDedicatedCapacities": "pbi-",
      "purviewAccounts": "pview-",
      "recoveryServicesVaults": "rsv-",
      "resourcesResourceGroups": "rg-",
      "searchSearchServices": "srch-",
      "serviceBusNamespaces": "sb-",
      "serviceBusNamespacesQueues": "sbq-",
      "serviceBusNamespacesTopics": "sbt-",
      "serviceEndPointPolicies": "se-",
      "serviceFabricClusters": "sf-",
      "signalRServiceSignalR": "sigr",
      "sqlManagedInstances": "sqlmi-",
      "sqlServers": "sql-",
      "sqlServersDataWarehouse": "sqldw-",
      "sqlServersDatabases": "sqldb-",
      "sqlServersDatabasesStretch": "sqlstrdb-",
      "storageStorageAccounts": "st",
      "storageStorageAccountsVm": "stvm",
      "storSimpleManagers": "ssimp",
      "streamAnalyticsCluster": "asa-",
      "synapseWorkspaces": "syn",
      "synapseWorkspacesAnalyticsWorkspaces": "synw",
      "synapseWorkspacesSqlPoolsDedicated": "syndp",
      "synapseWorkspacesSqlPoolsSpark": "synsp",
      "timeSeriesInsightsEnvironments": "tsi-",
      "webServerFarms": "plan-",
      "webSitesAppService": "app-",
      "webSitesAppServiceEnvironment": "ase-",
      "webSitesFunctions": "func-",
      "webStaticSites": "stapp-"
    },
    "abbrs": "[variables('$fxv#0')]",
    "tags": {
      "azd-env-name": "[parameters('environmentName')]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "resources",
      "resourceGroup": "[format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "environmentName": {
            "value": "[parameters('environmentName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "principalId": {
            "value": "[parameters('principalId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.10.13.619",
              "templateHash": "8184617524053814226"
            }
          },
          "parameters": {
            "environmentName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "principalId": {
              "type": "string",
              "defaultValue": ""
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "web",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "environmentName": {
                    "value": "[parameters('environmentName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "applicationInsightsName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'monitoring')).outputs.applicationInsightsName.value]"
                  },
                  "appServicePlanId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appserviceplan')).outputs.appServicePlanId.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.10.13.619",
                      "templateHash": "13222951388396115032"
                    }
                  },
                  "parameters": {
                    "environmentName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "serviceName": {
                      "type": "string",
                      "defaultValue": "web"
                    },
                    "appCommandLine": {
                      "type": "string",
                      "defaultValue": "pm2 serve /home/site/wwwroot --no-daemon --spa"
                    },
                    "applicationInsightsName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "appServicePlanId": {
                      "type": "string"
                    },
                    "appSettings": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-appservice-node-module', parameters('serviceName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "environmentName": {
                            "value": "[parameters('environmentName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "serviceName": {
                            "value": "[parameters('serviceName')]"
                          },
                          "appCommandLine": {
                            "value": "[parameters('appCommandLine')]"
                          },
                          "applicationInsightsName": {
                            "value": "[parameters('applicationInsightsName')]"
                          },
                          "appServicePlanId": {
                            "value": "[parameters('appServicePlanId')]"
                          },
                          "appSettings": {
                            "value": "[parameters('appSettings')]"
                          },
                          "runtimeName": {
                            "value": "node"
                          },
                          "runtimeVersion": {
                            "value": "16-lts"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.10.13.619",
                              "templateHash": "1921457551769087665"
                            }
                          },
                          "parameters": {
                            "environmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]"
                            },
                            "applicationInsightsName": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "appServicePlanId": {
                              "type": "string"
                            },
                            "keyVaultName": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "managedIdentity": {
                              "type": "bool",
                              "defaultValue": "[not(empty(parameters('keyVaultName')))]"
                            },
                            "serviceName": {
                              "type": "string"
                            },
                            "runtimeName": {
                              "type": "string",
                              "allowedValues": [
                                "dotnet",
                                "dotnetcore",
                                "dotnet-isolated",
                                "node",
                                "python",
                                "java",
                                "powershell",
                                "custom"
                              ]
                            },
                            "runtimeNameAndVersion": {
                              "type": "string",
                              "defaultValue": "[format('{0}|{1}', parameters('runtimeName'), parameters('runtimeVersion'))]"
                            },
                            "runtimeVersion": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string",
                              "defaultValue": "app,linux"
                            },
                            "allowedOrigins": {
                              "type": "array",
                              "defaultValue": []
                            },
                            "alwaysOn": {
                              "type": "bool",
                              "defaultValue": true
                            },
                            "appCommandLine": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "appSettings": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "clientAffinityEnabled": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "enableOryxBuild": {
                              "type": "bool",
                              "defaultValue": "[contains(parameters('kind'), 'linux')]"
                            },
                            "functionAppScaleLimit": {
                              "type": "int",
                              "defaultValue": -1
                            },
                            "linuxFxVersion": {
                              "type": "string",
                              "defaultValue": "[parameters('runtimeNameAndVersion')]"
                            },
                            "minimumElasticInstanceCount": {
                              "type": "int",
                              "defaultValue": -1
                            },
                            "numberOfWorkers": {
                              "type": "int",
                              "defaultValue": -1
                            },
                            "scmDoBuildDuringDeployment": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "use32BitWorkerProcess": {
                              "type": "bool",
                              "defaultValue": false
                            }
                          },
                          "variables": {
                            "$fxv#0": {
                              "analysisServicesServers": "as",
                              "apiManagementService": "apim-",
                              "appConfigurationConfigurationStores": "appcs-",
                              "appManagedEnvironments": "cae-",
                              "appContainerApps": "ca-",
                              "authorizationPolicyDefinitions": "policy-",
                              "automationAutomationAccounts": "aa-",
                              "blueprintBlueprints": "bp-",
                              "blueprintBlueprintsArtifacts": "bpa-",
                              "cacheRedis": "redis-",
                              "cdnProfiles": "cdnp-",
                              "cdnProfilesEndpoints": "cdne-",
                              "cognitiveServicesAccounts": "cog-",
                              "cognitiveServicesFormRecognizer": "cog-fr-",
                              "cognitiveServicesTextAnalytics": "cog-ta-",
                              "computeAvailabilitySets": "avail-",
                              "computeCloudServices": "cld-",
                              "computeDiskEncryptionSets": "des",
                              "computeDisks": "disk",
                              "computeDisksOs": "osdisk",
                              "computeGalleries": "gal",
                              "computeSnapshots": "snap-",
                              "computeVirtualMachines": "vm",
                              "computeVirtualMachineScaleSets": "vmss-",
                              "containerInstanceContainerGroups": "ci",
                              "containerRegistryRegistries": "cr",
                              "containerServiceManagedClusters": "aks-",
                              "databricksWorkspaces": "dbw-",
                              "dataFactoryFactories": "adf-",
                              "dataLakeAnalyticsAccounts": "dla",
                              "dataLakeStoreAccounts": "dls",
                              "dataMigrationServices": "dms-",
                              "dBforMySQLServers": "mysql-",
                              "dBforPostgreSQLServers": "psql-",
                              "devicesIotHubs": "iot-",
                              "devicesProvisioningServices": "provs-",
                              "devicesProvisioningServicesCertificates": "pcert-",
                              "documentDBDatabaseAccounts": "cosmos-",
                              "eventGridDomains": "evgd-",
                              "eventGridDomainsTopics": "evgt-",
                              "eventGridEventSubscriptions": "evgs-",
                              "eventHubNamespaces": "evhns-",
                              "eventHubNamespacesEventHubs": "evh-",
                              "hdInsightClustersHadoop": "hadoop-",
                              "hdInsightClustersHbase": "hbase-",
                              "hdInsightClustersKafka": "kafka-",
                              "hdInsightClustersMl": "mls-",
                              "hdInsightClustersSpark": "spark-",
                              "hdInsightClustersStorm": "storm-",
                              "hybridComputeMachines": "arcs-",
                              "insightsActionGroups": "ag-",
                              "insightsComponents": "appi-",
                              "keyVaultVaults": "kv-",
                              "kubernetesConnectedClusters": "arck",
                              "kustoClusters": "dec",
                              "kustoClustersDatabases": "dedb",
                              "logicIntegrationAccounts": "ia-",
                              "logicWorkflows": "logic-",
                              "machineLearningServicesWorkspaces": "mlw-",
                              "managedIdentityUserAssignedIdentities": "id-",
                              "managementManagementGroups": "mg-",
                              "migrateAssessmentProjects": "migr-",
                              "networkApplicationGateways": "agw-",
                              "networkApplicationSecurityGroups": "asg-",
                              "networkAzureFirewalls": "afw-",
                              "networkBastionHosts": "bas-",
                              "networkConnections": "con-",
                              "networkDnsZones": "dnsz-",
                              "networkExpressRouteCircuits": "erc-",
                              "networkFirewallPolicies": "afwp-",
                              "networkFirewallPoliciesWebApplication": "waf",
                              "networkFirewallPoliciesRuleGroups": "wafrg",
                              "networkFrontDoors": "fd-",
                              "networkFrontdoorWebApplicationFirewallPolicies": "fdfp-",
                              "networkLoadBalancersExternal": "lbe-",
                              "networkLoadBalancersInternal": "lbi-",
                              "networkLoadBalancersInboundNatRules": "rule-",
                              "networkLocalNetworkGateways": "lgw-",
                              "networkNatGateways": "ng-",
                              "networkNetworkInterfaces": "nic-",
                              "networkNetworkSecurityGroups": "nsg-",
                              "networkNetworkSecurityGroupsSecurityRules": "nsgsr-",
                              "networkNetworkWatchers": "nw-",
                              "networkPrivateDnsZones": "pdnsz-",
                              "networkPrivateLinkServices": "pl-",
                              "networkPublicIPAddresses": "pip-",
                              "networkPublicIPPrefixes": "ippre-",
                              "networkRouteFilters": "rf-",
                              "networkRouteTables": "rt-",
                              "networkRouteTablesRoutes": "udr-",
                              "networkTrafficManagerProfiles": "traf-",
                              "networkVirtualNetworkGateways": "vgw-",
                              "networkVirtualNetworks": "vnet-",
                              "networkVirtualNetworksSubnets": "snet-",
                              "networkVirtualNetworksVirtualNetworkPeerings": "peer-",
                              "networkVirtualWans": "vwan-",
                              "networkVpnGateways": "vpng-",
                              "networkVpnGatewaysVpnConnections": "vcn-",
                              "networkVpnGatewaysVpnSites": "vst-",
                              "notificationHubsNamespaces": "ntfns-",
                              "notificationHubsNamespacesNotificationHubs": "ntf-",
                              "operationalInsightsWorkspaces": "log-",
                              "portalDashboards": "dash-",
                              "powerBIDedicatedCapacities": "pbi-",
                              "purviewAccounts": "pview-",
                              "recoveryServicesVaults": "rsv-",
                              "resourcesResourceGroups": "rg-",
                              "searchSearchServices": "srch-",
                              "serviceBusNamespaces": "sb-",
                              "serviceBusNamespacesQueues": "sbq-",
                              "serviceBusNamespacesTopics": "sbt-",
                              "serviceEndPointPolicies": "se-",
                              "serviceFabricClusters": "sf-",
                              "signalRServiceSignalR": "sigr",
                              "sqlManagedInstances": "sqlmi-",
                              "sqlServers": "sql-",
                              "sqlServersDataWarehouse": "sqldw-",
                              "sqlServersDatabases": "sqldb-",
                              "sqlServersDatabasesStretch": "sqlstrdb-",
                              "storageStorageAccounts": "st",
                              "storageStorageAccountsVm": "stvm",
                              "storSimpleManagers": "ssimp",
                              "streamAnalyticsCluster": "asa-",
                              "synapseWorkspaces": "syn",
                              "synapseWorkspacesAnalyticsWorkspaces": "synw",
                              "synapseWorkspacesSqlPoolsDedicated": "syndp",
                              "synapseWorkspacesSqlPoolsSpark": "synsp",
                              "timeSeriesInsightsEnvironments": "tsi-",
                              "webServerFarms": "plan-",
                              "webSitesAppService": "app-",
                              "webSitesAppServiceEnvironment": "ase-",
                              "webSitesFunctions": "func-",
                              "webStaticSites": "stapp-"
                            },
                            "abbrs": "[variables('$fxv#0')]",
                            "tags": {
                              "azd-env-name": "[parameters('environmentName')]"
                            },
                            "resourceToken": "[toLower(uniqueString(subscription().id, parameters('environmentName'), parameters('location')))]",
                            "prefix": "[if(contains(parameters('kind'), 'function'), variables('abbrs').webSitesFunctions, variables('abbrs').webSitesAppService)]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Web/sites/config",
                              "apiVersion": "2022-03-01",
                              "name": "[format('{0}/{1}', format('{0}{1}-{2}', variables('prefix'), parameters('serviceName'), variables('resourceToken')), 'appsettings')]",
                              "properties": "[union(parameters('appSettings'), createObject('SCM_DO_BUILD_DURING_DEPLOYMENT', string(parameters('scmDoBuildDuringDeployment')), 'ENABLE_ORYX_BUILD', parameters('enableOryxBuild')), if(not(empty(parameters('applicationInsightsName'))), createObject('APPLICATIONINSIGHTS_CONNECTION_STRING', reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').ConnectionString), createObject()), if(not(empty(parameters('keyVaultName'))), createObject('AZURE_KEY_VAULT_ENDPOINT', reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2022-07-01').vaultUri), createObject()))]",
                              "dependsOn": [
                                "[resourceId('Microsoft.Web/sites', format('{0}{1}-{2}', variables('prefix'), parameters('serviceName'), variables('resourceToken')))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Web/sites/config",
                              "apiVersion": "2022-03-01",
                              "name": "[format('{0}/{1}', format('{0}{1}-{2}', variables('prefix'), parameters('serviceName'), variables('resourceToken')), 'logs')]",
                              "properties": {
                                "applicationLogs": {
                                  "fileSystem": {
                                    "level": "Verbose"
                                  }
                                },
                                "detailedErrorMessages": {
                                  "enabled": true
                                },
                                "failedRequestsTracing": {
                                  "enabled": true
                                },
                                "httpLogs": {
                                  "fileSystem": {
                                    "enabled": true,
                                    "retentionInDays": 1,
                                    "retentionInMb": 35
                                  }
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Web/sites', format('{0}{1}-{2}', variables('prefix'), parameters('serviceName'), variables('resourceToken')))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Web/sites",
                              "apiVersion": "2022-03-01",
                              "name": "[format('{0}{1}-{2}', variables('prefix'), parameters('serviceName'), variables('resourceToken'))]",
                              "location": "[parameters('location')]",
                              "tags": "[union(variables('tags'), createObject('azd-service-name', parameters('serviceName')))]",
                              "kind": "[parameters('kind')]",
                              "properties": {
                                "serverFarmId": "[parameters('appServicePlanId')]",
                                "siteConfig": {
                                  "linuxFxVersion": "[parameters('linuxFxVersion')]",
                                  "alwaysOn": "[parameters('alwaysOn')]",
                                  "ftpsState": "FtpsOnly",
                                  "appCommandLine": "[parameters('appCommandLine')]",
                                  "numberOfWorkers": "[if(not(equals(parameters('numberOfWorkers'), -1)), parameters('numberOfWorkers'), null())]",
                                  "minimumElasticInstanceCount": "[if(not(equals(parameters('minimumElasticInstanceCount'), -1)), parameters('minimumElasticInstanceCount'), null())]",
                                  "use32BitWorkerProcess": "[parameters('use32BitWorkerProcess')]",
                                  "functionAppScaleLimit": "[if(not(equals(parameters('functionAppScaleLimit'), -1)), parameters('functionAppScaleLimit'), null())]",
                                  "cors": {
                                    "allowedOrigins": "[union(createArray('https://portal.azure.com', 'https://ms.portal.azure.com'), parameters('allowedOrigins'))]"
                                  }
                                },
                                "clientAffinityEnabled": "[parameters('clientAffinityEnabled')]",
                                "httpsOnly": true
                              },
                              "identity": "[if(parameters('managedIdentity'), createObject('type', 'SystemAssigned'), null())]"
                            }
                          ],
                          "outputs": {
                            "identityPrincipalId": {
                              "type": "string",
                              "value": "[if(parameters('managedIdentity'), reference(resourceId('Microsoft.Web/sites', format('{0}{1}-{2}', variables('prefix'), parameters('serviceName'), variables('resourceToken'))), '2022-03-01', 'full').identity.principalId, '')]"
                            },
                            "name": {
                              "type": "string",
                              "value": "[format('{0}{1}-{2}', variables('prefix'), parameters('serviceName'), variables('resourceToken'))]"
                            },
                            "uri": {
                              "type": "string",
                              "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', format('{0}{1}-{2}', variables('prefix'), parameters('serviceName'), variables('resourceToken')))).defaultHostName)]"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "WEB_IDENTITY_PRINCIPAL_ID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-appservice-node-module', parameters('serviceName')))).outputs.identityPrincipalId.value]"
                    },
                    "WEB_NAME": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-appservice-node-module', parameters('serviceName')))).outputs.name.value]"
                    },
                    "WEB_URI": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-appservice-node-module', parameters('serviceName')))).outputs.uri.value]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'appserviceplan')]",
                "[resourceId('Microsoft.Resources/deployments', 'monitoring')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "api",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "environmentName": {
                    "value": "[parameters('environmentName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "applicationInsightsName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'monitoring')).outputs.applicationInsightsName.value]"
                  },
                  "appServicePlanId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appserviceplan')).outputs.appServicePlanId.value]"
                  },
                  "keyVaultName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyvault')).outputs.keyVaultName.value]"
                  },
                  "allowedOrigins": {
                    "value": [
                      "[reference(resourceId('Microsoft.Resources/deployments', 'web')).outputs.WEB_URI.value]"
                    ]
                  },
                  "appSettings": {
                    "value": {
                      "AZURE_COSMOS_CONNECTION_STRING_KEY": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos')).outputs.cosmosConnectionStringKey.value]",
                      "AZURE_COSMOS_DATABASE_NAME": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos')).outputs.cosmosDatabaseName.value]",
                      "AZURE_COSMOS_ENDPOINT": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos')).outputs.cosmosEndpoint.value]"
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.10.13.619",
                      "templateHash": "434598256020830552"
                    }
                  },
                  "parameters": {
                    "environmentName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "allowedOrigins": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "applicationInsightsName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "appServicePlanId": {
                      "type": "string"
                    },
                    "appSettings": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "keyVaultName": {
                      "type": "string"
                    },
                    "serviceName": {
                      "type": "string",
                      "defaultValue": "api"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-appservice-dotnet-module', parameters('serviceName'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "environmentName": {
                            "value": "[parameters('environmentName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "allowedOrigins": {
                            "value": "[parameters('allowedOrigins')]"
                          },
                          "applicationInsightsName": {
                            "value": "[parameters('applicationInsightsName')]"
                          },
                          "appServicePlanId": {
                            "value": "[parameters('appServicePlanId')]"
                          },
                          "appSettings": {
                            "value": "[parameters('appSettings')]"
                          },
                          "keyVaultName": {
                            "value": "[parameters('keyVaultName')]"
                          },
                          "runtimeName": {
                            "value": "dotnetcore"
                          },
                          "runtimeVersion": {
                            "value": "6.0"
                          },
                          "scmDoBuildDuringDeployment": {
                            "value": false
                          },
                          "serviceName": {
                            "value": "[parameters('serviceName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.10.13.619",
                              "templateHash": "1921457551769087665"
                            }
                          },
                          "parameters": {
                            "environmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]"
                            },
                            "applicationInsightsName": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "appServicePlanId": {
                              "type": "string"
                            },
                            "keyVaultName": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "managedIdentity": {
                              "type": "bool",
                              "defaultValue": "[not(empty(parameters('keyVaultName')))]"
                            },
                            "serviceName": {
                              "type": "string"
                            },
                            "runtimeName": {
                              "type": "string",
                              "allowedValues": [
                                "dotnet",
                                "dotnetcore",
                                "dotnet-isolated",
                                "node",
                                "python",
                                "java",
                                "powershell",
                                "custom"
                              ]
                            },
                            "runtimeNameAndVersion": {
                              "type": "string",
                              "defaultValue": "[format('{0}|{1}', parameters('runtimeName'), parameters('runtimeVersion'))]"
                            },
                            "runtimeVersion": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string",
                              "defaultValue": "app,linux"
                            },
                            "allowedOrigins": {
                              "type": "array",
                              "defaultValue": []
                            },
                            "alwaysOn": {
                              "type": "bool",
                              "defaultValue": true
                            },
                            "appCommandLine": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "appSettings": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "clientAffinityEnabled": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "enableOryxBuild": {
                              "type": "bool",
                              "defaultValue": "[contains(parameters('kind'), 'linux')]"
                            },
                            "functionAppScaleLimit": {
                              "type": "int",
                              "defaultValue": -1
                            },
                            "linuxFxVersion": {
                              "type": "string",
                              "defaultValue": "[parameters('runtimeNameAndVersion')]"
                            },
                            "minimumElasticInstanceCount": {
                              "type": "int",
                              "defaultValue": -1
                            },
                            "numberOfWorkers": {
                              "type": "int",
                              "defaultValue": -1
                            },
                            "scmDoBuildDuringDeployment": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "use32BitWorkerProcess": {
                              "type": "bool",
                              "defaultValue": false
                            }
                          },
                          "variables": {
                            "$fxv#0": {
                              "analysisServicesServers": "as",
                              "apiManagementService": "apim-",
                              "appConfigurationConfigurationStores": "appcs-",
                              "appManagedEnvironments": "cae-",
                              "appContainerApps": "ca-",
                              "authorizationPolicyDefinitions": "policy-",
                              "automationAutomationAccounts": "aa-",
                              "blueprintBlueprints": "bp-",
                              "blueprintBlueprintsArtifacts": "bpa-",
                              "cacheRedis": "redis-",
                              "cdnProfiles": "cdnp-",
                              "cdnProfilesEndpoints": "cdne-",
                              "cognitiveServicesAccounts": "cog-",
                              "cognitiveServicesFormRecognizer": "cog-fr-",
                              "cognitiveServicesTextAnalytics": "cog-ta-",
                              "computeAvailabilitySets": "avail-",
                              "computeCloudServices": "cld-",
                              "computeDiskEncryptionSets": "des",
                              "computeDisks": "disk",
                              "computeDisksOs": "osdisk",
                              "computeGalleries": "gal",
                              "computeSnapshots": "snap-",
                              "computeVirtualMachines": "vm",
                              "computeVirtualMachineScaleSets": "vmss-",
                              "containerInstanceContainerGroups": "ci",
                              "containerRegistryRegistries": "cr",
                              "containerServiceManagedClusters": "aks-",
                              "databricksWorkspaces": "dbw-",
                              "dataFactoryFactories": "adf-",
                              "dataLakeAnalyticsAccounts": "dla",
                              "dataLakeStoreAccounts": "dls",
                              "dataMigrationServices": "dms-",
                              "dBforMySQLServers": "mysql-",
                              "dBforPostgreSQLServers": "psql-",
                              "devicesIotHubs": "iot-",
                              "devicesProvisioningServices": "provs-",
                              "devicesProvisioningServicesCertificates": "pcert-",
                              "documentDBDatabaseAccounts": "cosmos-",
                              "eventGridDomains": "evgd-",
                              "eventGridDomainsTopics": "evgt-",
                              "eventGridEventSubscriptions": "evgs-",
                              "eventHubNamespaces": "evhns-",
                              "eventHubNamespacesEventHubs": "evh-",
                              "hdInsightClustersHadoop": "hadoop-",
                              "hdInsightClustersHbase": "hbase-",
                              "hdInsightClustersKafka": "kafka-",
                              "hdInsightClustersMl": "mls-",
                              "hdInsightClustersSpark": "spark-",
                              "hdInsightClustersStorm": "storm-",
                              "hybridComputeMachines": "arcs-",
                              "insightsActionGroups": "ag-",
                              "insightsComponents": "appi-",
                              "keyVaultVaults": "kv-",
                              "kubernetesConnectedClusters": "arck",
                              "kustoClusters": "dec",
                              "kustoClustersDatabases": "dedb",
                              "logicIntegrationAccounts": "ia-",
                              "logicWorkflows": "logic-",
                              "machineLearningServicesWorkspaces": "mlw-",
                              "managedIdentityUserAssignedIdentities": "id-",
                              "managementManagementGroups": "mg-",
                              "migrateAssessmentProjects": "migr-",
                              "networkApplicationGateways": "agw-",
                              "networkApplicationSecurityGroups": "asg-",
                              "networkAzureFirewalls": "afw-",
                              "networkBastionHosts": "bas-",
                              "networkConnections": "con-",
                              "networkDnsZones": "dnsz-",
                              "networkExpressRouteCircuits": "erc-",
                              "networkFirewallPolicies": "afwp-",
                              "networkFirewallPoliciesWebApplication": "waf",
                              "networkFirewallPoliciesRuleGroups": "wafrg",
                              "networkFrontDoors": "fd-",
                              "networkFrontdoorWebApplicationFirewallPolicies": "fdfp-",
                              "networkLoadBalancersExternal": "lbe-",
                              "networkLoadBalancersInternal": "lbi-",
                              "networkLoadBalancersInboundNatRules": "rule-",
                              "networkLocalNetworkGateways": "lgw-",
                              "networkNatGateways": "ng-",
                              "networkNetworkInterfaces": "nic-",
                              "networkNetworkSecurityGroups": "nsg-",
                              "networkNetworkSecurityGroupsSecurityRules": "nsgsr-",
                              "networkNetworkWatchers": "nw-",
                              "networkPrivateDnsZones": "pdnsz-",
                              "networkPrivateLinkServices": "pl-",
                              "networkPublicIPAddresses": "pip-",
                              "networkPublicIPPrefixes": "ippre-",
                              "networkRouteFilters": "rf-",
                              "networkRouteTables": "rt-",
                              "networkRouteTablesRoutes": "udr-",
                              "networkTrafficManagerProfiles": "traf-",
                              "networkVirtualNetworkGateways": "vgw-",
                              "networkVirtualNetworks": "vnet-",
                              "networkVirtualNetworksSubnets": "snet-",
                              "networkVirtualNetworksVirtualNetworkPeerings": "peer-",
                              "networkVirtualWans": "vwan-",
                              "networkVpnGateways": "vpng-",
                              "networkVpnGatewaysVpnConnections": "vcn-",
                              "networkVpnGatewaysVpnSites": "vst-",
                              "notificationHubsNamespaces": "ntfns-",
                              "notificationHubsNamespacesNotificationHubs": "ntf-",
                              "operationalInsightsWorkspaces": "log-",
                              "portalDashboards": "dash-",
                              "powerBIDedicatedCapacities": "pbi-",
                              "purviewAccounts": "pview-",
                              "recoveryServicesVaults": "rsv-",
                              "resourcesResourceGroups": "rg-",
                              "searchSearchServices": "srch-",
                              "serviceBusNamespaces": "sb-",
                              "serviceBusNamespacesQueues": "sbq-",
                              "serviceBusNamespacesTopics": "sbt-",
                              "serviceEndPointPolicies": "se-",
                              "serviceFabricClusters": "sf-",
                              "signalRServiceSignalR": "sigr",
                              "sqlManagedInstances": "sqlmi-",
                              "sqlServers": "sql-",
                              "sqlServersDataWarehouse": "sqldw-",
                              "sqlServersDatabases": "sqldb-",
                              "sqlServersDatabasesStretch": "sqlstrdb-",
                              "storageStorageAccounts": "st",
                              "storageStorageAccountsVm": "stvm",
                              "storSimpleManagers": "ssimp",
                              "streamAnalyticsCluster": "asa-",
                              "synapseWorkspaces": "syn",
                              "synapseWorkspacesAnalyticsWorkspaces": "synw",
                              "synapseWorkspacesSqlPoolsDedicated": "syndp",
                              "synapseWorkspacesSqlPoolsSpark": "synsp",
                              "timeSeriesInsightsEnvironments": "tsi-",
                              "webServerFarms": "plan-",
                              "webSitesAppService": "app-",
                              "webSitesAppServiceEnvironment": "ase-",
                              "webSitesFunctions": "func-",
                              "webStaticSites": "stapp-"
                            },
                            "abbrs": "[variables('$fxv#0')]",
                            "tags": {
                              "azd-env-name": "[parameters('environmentName')]"
                            },
                            "resourceToken": "[toLower(uniqueString(subscription().id, parameters('environmentName'), parameters('location')))]",
                            "prefix": "[if(contains(parameters('kind'), 'function'), variables('abbrs').webSitesFunctions, variables('abbrs').webSitesAppService)]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Web/sites/config",
                              "apiVersion": "2022-03-01",
                              "name": "[format('{0}/{1}', format('{0}{1}-{2}', variables('prefix'), parameters('serviceName'), variables('resourceToken')), 'appsettings')]",
                              "properties": "[union(parameters('appSettings'), createObject('SCM_DO_BUILD_DURING_DEPLOYMENT', string(parameters('scmDoBuildDuringDeployment')), 'ENABLE_ORYX_BUILD', parameters('enableOryxBuild')), if(not(empty(parameters('applicationInsightsName'))), createObject('APPLICATIONINSIGHTS_CONNECTION_STRING', reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').ConnectionString), createObject()), if(not(empty(parameters('keyVaultName'))), createObject('AZURE_KEY_VAULT_ENDPOINT', reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2022-07-01').vaultUri), createObject()))]",
                              "dependsOn": [
                                "[resourceId('Microsoft.Web/sites', format('{0}{1}-{2}', variables('prefix'), parameters('serviceName'), variables('resourceToken')))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Web/sites/config",
                              "apiVersion": "2022-03-01",
                              "name": "[format('{0}/{1}', format('{0}{1}-{2}', variables('prefix'), parameters('serviceName'), variables('resourceToken')), 'logs')]",
                              "properties": {
                                "applicationLogs": {
                                  "fileSystem": {
                                    "level": "Verbose"
                                  }
                                },
                                "detailedErrorMessages": {
                                  "enabled": true
                                },
                                "failedRequestsTracing": {
                                  "enabled": true
                                },
                                "httpLogs": {
                                  "fileSystem": {
                                    "enabled": true,
                                    "retentionInDays": 1,
                                    "retentionInMb": 35
                                  }
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Web/sites', format('{0}{1}-{2}', variables('prefix'), parameters('serviceName'), variables('resourceToken')))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Web/sites",
                              "apiVersion": "2022-03-01",
                              "name": "[format('{0}{1}-{2}', variables('prefix'), parameters('serviceName'), variables('resourceToken'))]",
                              "location": "[parameters('location')]",
                              "tags": "[union(variables('tags'), createObject('azd-service-name', parameters('serviceName')))]",
                              "kind": "[parameters('kind')]",
                              "properties": {
                                "serverFarmId": "[parameters('appServicePlanId')]",
                                "siteConfig": {
                                  "linuxFxVersion": "[parameters('linuxFxVersion')]",
                                  "alwaysOn": "[parameters('alwaysOn')]",
                                  "ftpsState": "FtpsOnly",
                                  "appCommandLine": "[parameters('appCommandLine')]",
                                  "numberOfWorkers": "[if(not(equals(parameters('numberOfWorkers'), -1)), parameters('numberOfWorkers'), null())]",
                                  "minimumElasticInstanceCount": "[if(not(equals(parameters('minimumElasticInstanceCount'), -1)), parameters('minimumElasticInstanceCount'), null())]",
                                  "use32BitWorkerProcess": "[parameters('use32BitWorkerProcess')]",
                                  "functionAppScaleLimit": "[if(not(equals(parameters('functionAppScaleLimit'), -1)), parameters('functionAppScaleLimit'), null())]",
                                  "cors": {
                                    "allowedOrigins": "[union(createArray('https://portal.azure.com', 'https://ms.portal.azure.com'), parameters('allowedOrigins'))]"
                                  }
                                },
                                "clientAffinityEnabled": "[parameters('clientAffinityEnabled')]",
                                "httpsOnly": true
                              },
                              "identity": "[if(parameters('managedIdentity'), createObject('type', 'SystemAssigned'), null())]"
                            }
                          ],
                          "outputs": {
                            "identityPrincipalId": {
                              "type": "string",
                              "value": "[if(parameters('managedIdentity'), reference(resourceId('Microsoft.Web/sites', format('{0}{1}-{2}', variables('prefix'), parameters('serviceName'), variables('resourceToken'))), '2022-03-01', 'full').identity.principalId, '')]"
                            },
                            "name": {
                              "type": "string",
                              "value": "[format('{0}{1}-{2}', variables('prefix'), parameters('serviceName'), variables('resourceToken'))]"
                            },
                            "uri": {
                              "type": "string",
                              "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', format('{0}{1}-{2}', variables('prefix'), parameters('serviceName'), variables('resourceToken')))).defaultHostName)]"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "API_IDENTITY_PRINCIPAL_ID": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-appservice-dotnet-module', parameters('serviceName')))).outputs.identityPrincipalId.value]"
                    },
                    "API_NAME": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-appservice-dotnet-module', parameters('serviceName')))).outputs.name.value]"
                    },
                    "API_URI": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-appservice-dotnet-module', parameters('serviceName')))).outputs.uri.value]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'appserviceplan')]",
                "[resourceId('Microsoft.Resources/deployments', 'cosmos')]",
                "[resourceId('Microsoft.Resources/deployments', 'keyvault')]",
                "[resourceId('Microsoft.Resources/deployments', 'monitoring')]",
                "[resourceId('Microsoft.Resources/deployments', 'web')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "api-keyvault-access",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "environmentName": {
                    "value": "[parameters('environmentName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "keyVaultName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyvault')).outputs.keyVaultName.value]"
                  },
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'api')).outputs.API_IDENTITY_PRINCIPAL_ID.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.10.13.619",
                      "templateHash": "3052012382288359233"
                    }
                  },
                  "parameters": {
                    "environmentName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "keyVaultName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "permissions": {
                      "type": "object",
                      "defaultValue": {
                        "secrets": [
                          "get",
                          "list"
                        ]
                      }
                    },
                    "principalId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "$fxv#0": {
                      "analysisServicesServers": "as",
                      "apiManagementService": "apim-",
                      "appConfigurationConfigurationStores": "appcs-",
                      "appManagedEnvironments": "cae-",
                      "appContainerApps": "ca-",
                      "authorizationPolicyDefinitions": "policy-",
                      "automationAutomationAccounts": "aa-",
                      "blueprintBlueprints": "bp-",
                      "blueprintBlueprintsArtifacts": "bpa-",
                      "cacheRedis": "redis-",
                      "cdnProfiles": "cdnp-",
                      "cdnProfilesEndpoints": "cdne-",
                      "cognitiveServicesAccounts": "cog-",
                      "cognitiveServicesFormRecognizer": "cog-fr-",
                      "cognitiveServicesTextAnalytics": "cog-ta-",
                      "computeAvailabilitySets": "avail-",
                      "computeCloudServices": "cld-",
                      "computeDiskEncryptionSets": "des",
                      "computeDisks": "disk",
                      "computeDisksOs": "osdisk",
                      "computeGalleries": "gal",
                      "computeSnapshots": "snap-",
                      "computeVirtualMachines": "vm",
                      "computeVirtualMachineScaleSets": "vmss-",
                      "containerInstanceContainerGroups": "ci",
                      "containerRegistryRegistries": "cr",
                      "containerServiceManagedClusters": "aks-",
                      "databricksWorkspaces": "dbw-",
                      "dataFactoryFactories": "adf-",
                      "dataLakeAnalyticsAccounts": "dla",
                      "dataLakeStoreAccounts": "dls",
                      "dataMigrationServices": "dms-",
                      "dBforMySQLServers": "mysql-",
                      "dBforPostgreSQLServers": "psql-",
                      "devicesIotHubs": "iot-",
                      "devicesProvisioningServices": "provs-",
                      "devicesProvisioningServicesCertificates": "pcert-",
                      "documentDBDatabaseAccounts": "cosmos-",
                      "eventGridDomains": "evgd-",
                      "eventGridDomainsTopics": "evgt-",
                      "eventGridEventSubscriptions": "evgs-",
                      "eventHubNamespaces": "evhns-",
                      "eventHubNamespacesEventHubs": "evh-",
                      "hdInsightClustersHadoop": "hadoop-",
                      "hdInsightClustersHbase": "hbase-",
                      "hdInsightClustersKafka": "kafka-",
                      "hdInsightClustersMl": "mls-",
                      "hdInsightClustersSpark": "spark-",
                      "hdInsightClustersStorm": "storm-",
                      "hybridComputeMachines": "arcs-",
                      "insightsActionGroups": "ag-",
                      "insightsComponents": "appi-",
                      "keyVaultVaults": "kv-",
                      "kubernetesConnectedClusters": "arck",
                      "kustoClusters": "dec",
                      "kustoClustersDatabases": "dedb",
                      "logicIntegrationAccounts": "ia-",
                      "logicWorkflows": "logic-",
                      "machineLearningServicesWorkspaces": "mlw-",
                      "managedIdentityUserAssignedIdentities": "id-",
                      "managementManagementGroups": "mg-",
                      "migrateAssessmentProjects": "migr-",
                      "networkApplicationGateways": "agw-",
                      "networkApplicationSecurityGroups": "asg-",
                      "networkAzureFirewalls": "afw-",
                      "networkBastionHosts": "bas-",
                      "networkConnections": "con-",
                      "networkDnsZones": "dnsz-",
                      "networkExpressRouteCircuits": "erc-",
                      "networkFirewallPolicies": "afwp-",
                      "networkFirewallPoliciesWebApplication": "waf",
                      "networkFirewallPoliciesRuleGroups": "wafrg",
                      "networkFrontDoors": "fd-",
                      "networkFrontdoorWebApplicationFirewallPolicies": "fdfp-",
                      "networkLoadBalancersExternal": "lbe-",
                      "networkLoadBalancersInternal": "lbi-",
                      "networkLoadBalancersInboundNatRules": "rule-",
                      "networkLocalNetworkGateways": "lgw-",
                      "networkNatGateways": "ng-",
                      "networkNetworkInterfaces": "nic-",
                      "networkNetworkSecurityGroups": "nsg-",
                      "networkNetworkSecurityGroupsSecurityRules": "nsgsr-",
                      "networkNetworkWatchers": "nw-",
                      "networkPrivateDnsZones": "pdnsz-",
                      "networkPrivateLinkServices": "pl-",
                      "networkPublicIPAddresses": "pip-",
                      "networkPublicIPPrefixes": "ippre-",
                      "networkRouteFilters": "rf-",
                      "networkRouteTables": "rt-",
                      "networkRouteTablesRoutes": "udr-",
                      "networkTrafficManagerProfiles": "traf-",
                      "networkVirtualNetworkGateways": "vgw-",
                      "networkVirtualNetworks": "vnet-",
                      "networkVirtualNetworksSubnets": "snet-",
                      "networkVirtualNetworksVirtualNetworkPeerings": "peer-",
                      "networkVirtualWans": "vwan-",
                      "networkVpnGateways": "vpng-",
                      "networkVpnGatewaysVpnConnections": "vcn-",
                      "networkVpnGatewaysVpnSites": "vst-",
                      "notificationHubsNamespaces": "ntfns-",
                      "notificationHubsNamespacesNotificationHubs": "ntf-",
                      "operationalInsightsWorkspaces": "log-",
                      "portalDashboards": "dash-",
                      "powerBIDedicatedCapacities": "pbi-",
                      "purviewAccounts": "pview-",
                      "recoveryServicesVaults": "rsv-",
                      "resourcesResourceGroups": "rg-",
                      "searchSearchServices": "srch-",
                      "serviceBusNamespaces": "sb-",
                      "serviceBusNamespacesQueues": "sbq-",
                      "serviceBusNamespacesTopics": "sbt-",
                      "serviceEndPointPolicies": "se-",
                      "serviceFabricClusters": "sf-",
                      "signalRServiceSignalR": "sigr",
                      "sqlManagedInstances": "sqlmi-",
                      "sqlServers": "sql-",
                      "sqlServersDataWarehouse": "sqldw-",
                      "sqlServersDatabases": "sqldb-",
                      "sqlServersDatabasesStretch": "sqlstrdb-",
                      "storageStorageAccounts": "st",
                      "storageStorageAccountsVm": "stvm",
                      "storSimpleManagers": "ssimp",
                      "streamAnalyticsCluster": "asa-",
                      "synapseWorkspaces": "syn",
                      "synapseWorkspacesAnalyticsWorkspaces": "synw",
                      "synapseWorkspacesSqlPoolsDedicated": "syndp",
                      "synapseWorkspacesSqlPoolsSpark": "synsp",
                      "timeSeriesInsightsEnvironments": "tsi-",
                      "webServerFarms": "plan-",
                      "webSitesAppService": "app-",
                      "webSitesAppServiceEnvironment": "ase-",
                      "webSitesFunctions": "func-",
                      "webStaticSites": "stapp-"
                    },
                    "abbrs": "[variables('$fxv#0')]",
                    "resourceToken": "[toLower(uniqueString(subscription().id, parameters('environmentName'), parameters('location')))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/accessPolicies",
                      "apiVersion": "2022-07-01",
                      "name": "[format('{0}/{1}', if(not(empty(parameters('keyVaultName'))), parameters('keyVaultName'), format('{0}{1}', variables('abbrs').keyVaultVaults, variables('resourceToken'))), 'add')]",
                      "properties": {
                        "accessPolicies": [
                          {
                            "objectId": "[parameters('principalId')]",
                            "tenantId": "[subscription().tenantId]",
                            "permissions": "[parameters('permissions')]"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'api')]",
                "[resourceId('Microsoft.Resources/deployments', 'keyvault')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "api-cosmos-access",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "environmentName": {
                    "value": "[parameters('environmentName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "cosmosRoleDefinitionId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos')).outputs.cosmosSqlRoleDefinitionId.value]"
                  },
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'api')).outputs.API_IDENTITY_PRINCIPAL_ID.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.10.13.619",
                      "templateHash": "16369358343898749347"
                    }
                  },
                  "parameters": {
                    "environmentName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "cosmosRoleDefinitionId": {
                      "type": "string"
                    },
                    "principalId": {
                      "type": "string",
                      "defaultValue": ""
                    }
                  },
                  "variables": {
                    "$fxv#0": {
                      "analysisServicesServers": "as",
                      "apiManagementService": "apim-",
                      "appConfigurationConfigurationStores": "appcs-",
                      "appManagedEnvironments": "cae-",
                      "appContainerApps": "ca-",
                      "authorizationPolicyDefinitions": "policy-",
                      "automationAutomationAccounts": "aa-",
                      "blueprintBlueprints": "bp-",
                      "blueprintBlueprintsArtifacts": "bpa-",
                      "cacheRedis": "redis-",
                      "cdnProfiles": "cdnp-",
                      "cdnProfilesEndpoints": "cdne-",
                      "cognitiveServicesAccounts": "cog-",
                      "cognitiveServicesFormRecognizer": "cog-fr-",
                      "cognitiveServicesTextAnalytics": "cog-ta-",
                      "computeAvailabilitySets": "avail-",
                      "computeCloudServices": "cld-",
                      "computeDiskEncryptionSets": "des",
                      "computeDisks": "disk",
                      "computeDisksOs": "osdisk",
                      "computeGalleries": "gal",
                      "computeSnapshots": "snap-",
                      "computeVirtualMachines": "vm",
                      "computeVirtualMachineScaleSets": "vmss-",
                      "containerInstanceContainerGroups": "ci",
                      "containerRegistryRegistries": "cr",
                      "containerServiceManagedClusters": "aks-",
                      "databricksWorkspaces": "dbw-",
                      "dataFactoryFactories": "adf-",
                      "dataLakeAnalyticsAccounts": "dla",
                      "dataLakeStoreAccounts": "dls",
                      "dataMigrationServices": "dms-",
                      "dBforMySQLServers": "mysql-",
                      "dBforPostgreSQLServers": "psql-",
                      "devicesIotHubs": "iot-",
                      "devicesProvisioningServices": "provs-",
                      "devicesProvisioningServicesCertificates": "pcert-",
                      "documentDBDatabaseAccounts": "cosmos-",
                      "eventGridDomains": "evgd-",
                      "eventGridDomainsTopics": "evgt-",
                      "eventGridEventSubscriptions": "evgs-",
                      "eventHubNamespaces": "evhns-",
                      "eventHubNamespacesEventHubs": "evh-",
                      "hdInsightClustersHadoop": "hadoop-",
                      "hdInsightClustersHbase": "hbase-",
                      "hdInsightClustersKafka": "kafka-",
                      "hdInsightClustersMl": "mls-",
                      "hdInsightClustersSpark": "spark-",
                      "hdInsightClustersStorm": "storm-",
                      "hybridComputeMachines": "arcs-",
                      "insightsActionGroups": "ag-",
                      "insightsComponents": "appi-",
                      "keyVaultVaults": "kv-",
                      "kubernetesConnectedClusters": "arck",
                      "kustoClusters": "dec",
                      "kustoClustersDatabases": "dedb",
                      "logicIntegrationAccounts": "ia-",
                      "logicWorkflows": "logic-",
                      "machineLearningServicesWorkspaces": "mlw-",
                      "managedIdentityUserAssignedIdentities": "id-",
                      "managementManagementGroups": "mg-",
                      "migrateAssessmentProjects": "migr-",
                      "networkApplicationGateways": "agw-",
                      "networkApplicationSecurityGroups": "asg-",
                      "networkAzureFirewalls": "afw-",
                      "networkBastionHosts": "bas-",
                      "networkConnections": "con-",
                      "networkDnsZones": "dnsz-",
                      "networkExpressRouteCircuits": "erc-",
                      "networkFirewallPolicies": "afwp-",
                      "networkFirewallPoliciesWebApplication": "waf",
                      "networkFirewallPoliciesRuleGroups": "wafrg",
                      "networkFrontDoors": "fd-",
                      "networkFrontdoorWebApplicationFirewallPolicies": "fdfp-",
                      "networkLoadBalancersExternal": "lbe-",
                      "networkLoadBalancersInternal": "lbi-",
                      "networkLoadBalancersInboundNatRules": "rule-",
                      "networkLocalNetworkGateways": "lgw-",
                      "networkNatGateways": "ng-",
                      "networkNetworkInterfaces": "nic-",
                      "networkNetworkSecurityGroups": "nsg-",
                      "networkNetworkSecurityGroupsSecurityRules": "nsgsr-",
                      "networkNetworkWatchers": "nw-",
                      "networkPrivateDnsZones": "pdnsz-",
                      "networkPrivateLinkServices": "pl-",
                      "networkPublicIPAddresses": "pip-",
                      "networkPublicIPPrefixes": "ippre-",
                      "networkRouteFilters": "rf-",
                      "networkRouteTables": "rt-",
                      "networkRouteTablesRoutes": "udr-",
                      "networkTrafficManagerProfiles": "traf-",
                      "networkVirtualNetworkGateways": "vgw-",
                      "networkVirtualNetworks": "vnet-",
                      "networkVirtualNetworksSubnets": "snet-",
                      "networkVirtualNetworksVirtualNetworkPeerings": "peer-",
                      "networkVirtualWans": "vwan-",
                      "networkVpnGateways": "vpng-",
                      "networkVpnGatewaysVpnConnections": "vcn-",
                      "networkVpnGatewaysVpnSites": "vst-",
                      "notificationHubsNamespaces": "ntfns-",
                      "notificationHubsNamespacesNotificationHubs": "ntf-",
                      "operationalInsightsWorkspaces": "log-",
                      "portalDashboards": "dash-",
                      "powerBIDedicatedCapacities": "pbi-",
                      "purviewAccounts": "pview-",
                      "recoveryServicesVaults": "rsv-",
                      "resourcesResourceGroups": "rg-",
                      "searchSearchServices": "srch-",
                      "serviceBusNamespaces": "sb-",
                      "serviceBusNamespacesQueues": "sbq-",
                      "serviceBusNamespacesTopics": "sbt-",
                      "serviceEndPointPolicies": "se-",
                      "serviceFabricClusters": "sf-",
                      "signalRServiceSignalR": "sigr",
                      "sqlManagedInstances": "sqlmi-",
                      "sqlServers": "sql-",
                      "sqlServersDataWarehouse": "sqldw-",
                      "sqlServersDatabases": "sqldb-",
                      "sqlServersDatabasesStretch": "sqlstrdb-",
                      "storageStorageAccounts": "st",
                      "storageStorageAccountsVm": "stvm",
                      "storSimpleManagers": "ssimp",
                      "streamAnalyticsCluster": "asa-",
                      "synapseWorkspaces": "syn",
                      "synapseWorkspacesAnalyticsWorkspaces": "synw",
                      "synapseWorkspacesSqlPoolsDedicated": "syndp",
                      "synapseWorkspacesSqlPoolsSpark": "synsp",
                      "timeSeriesInsightsEnvironments": "tsi-",
                      "webServerFarms": "plan-",
                      "webSitesAppService": "app-",
                      "webSitesAppServiceEnvironment": "ase-",
                      "webSitesFunctions": "func-",
                      "webStaticSites": "stapp-"
                    },
                    "abbrs": "[variables('$fxv#0')]",
                    "resourceToken": "[toLower(uniqueString(subscription().id, parameters('environmentName'), parameters('location')))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleAssignments",
                      "apiVersion": "2022-05-15",
                      "name": "[format('{0}/{1}', format('{0}{1}', variables('abbrs').documentDBDatabaseAccounts, variables('resourceToken')), guid(parameters('cosmosRoleDefinitionId'), parameters('principalId'), resourceId('Microsoft.DocumentDB/databaseAccounts', format('{0}{1}', variables('abbrs').documentDBDatabaseAccounts, variables('resourceToken')))))]",
                      "properties": {
                        "principalId": "[parameters('principalId')]",
                        "roleDefinitionId": "[parameters('cosmosRoleDefinitionId')]",
                        "scope": "[resourceId('Microsoft.DocumentDB/databaseAccounts', format('{0}{1}', variables('abbrs').documentDBDatabaseAccounts, variables('resourceToken')))]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'api')]",
                "[resourceId('Microsoft.Resources/deployments', 'cosmos')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "cosmos",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "environmentName": {
                    "value": "[parameters('environmentName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "keyVaultName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyvault')).outputs.keyVaultName.value]"
                  },
                  "principalIds": {
                    "value": [
                      "[parameters('principalId')]"
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.10.13.619",
                      "templateHash": "7370369242460995583"
                    }
                  },
                  "parameters": {
                    "environmentName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "containers": {
                      "type": "array",
                      "defaultValue": [
                        {
                          "name": "TodoList",
                          "id": "TodoList",
                          "partitionKey": "/id"
                        },
                        {
                          "name": "TodoItem",
                          "id": "TodoItem",
                          "partitionKey": "/id"
                        }
                      ]
                    },
                    "cosmosDatabaseName": {
                      "type": "string",
                      "defaultValue": "Todo"
                    },
                    "keyVaultName": {
                      "type": "string"
                    },
                    "principalIds": {
                      "type": "array",
                      "defaultValue": []
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "cosmos-sql",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "environmentName": {
                            "value": "[parameters('environmentName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "containers": {
                            "value": "[parameters('containers')]"
                          },
                          "cosmosDatabaseName": {
                            "value": "[parameters('cosmosDatabaseName')]"
                          },
                          "keyVaultName": {
                            "value": "[parameters('keyVaultName')]"
                          },
                          "principalIds": {
                            "value": "[parameters('principalIds')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.10.13.619",
                              "templateHash": "9754775035135352110"
                            }
                          },
                          "parameters": {
                            "environmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]"
                            },
                            "containers": {
                              "type": "array",
                              "defaultValue": []
                            },
                            "cosmosDatabaseName": {
                              "type": "string"
                            },
                            "keyVaultName": {
                              "type": "string"
                            },
                            "principalIds": {
                              "type": "array",
                              "defaultValue": []
                            }
                          },
                          "variables": {
                            "$fxv#0": {
                              "analysisServicesServers": "as",
                              "apiManagementService": "apim-",
                              "appConfigurationConfigurationStores": "appcs-",
                              "appManagedEnvironments": "cae-",
                              "appContainerApps": "ca-",
                              "authorizationPolicyDefinitions": "policy-",
                              "automationAutomationAccounts": "aa-",
                              "blueprintBlueprints": "bp-",
                              "blueprintBlueprintsArtifacts": "bpa-",
                              "cacheRedis": "redis-",
                              "cdnProfiles": "cdnp-",
                              "cdnProfilesEndpoints": "cdne-",
                              "cognitiveServicesAccounts": "cog-",
                              "cognitiveServicesFormRecognizer": "cog-fr-",
                              "cognitiveServicesTextAnalytics": "cog-ta-",
                              "computeAvailabilitySets": "avail-",
                              "computeCloudServices": "cld-",
                              "computeDiskEncryptionSets": "des",
                              "computeDisks": "disk",
                              "computeDisksOs": "osdisk",
                              "computeGalleries": "gal",
                              "computeSnapshots": "snap-",
                              "computeVirtualMachines": "vm",
                              "computeVirtualMachineScaleSets": "vmss-",
                              "containerInstanceContainerGroups": "ci",
                              "containerRegistryRegistries": "cr",
                              "containerServiceManagedClusters": "aks-",
                              "databricksWorkspaces": "dbw-",
                              "dataFactoryFactories": "adf-",
                              "dataLakeAnalyticsAccounts": "dla",
                              "dataLakeStoreAccounts": "dls",
                              "dataMigrationServices": "dms-",
                              "dBforMySQLServers": "mysql-",
                              "dBforPostgreSQLServers": "psql-",
                              "devicesIotHubs": "iot-",
                              "devicesProvisioningServices": "provs-",
                              "devicesProvisioningServicesCertificates": "pcert-",
                              "documentDBDatabaseAccounts": "cosmos-",
                              "eventGridDomains": "evgd-",
                              "eventGridDomainsTopics": "evgt-",
                              "eventGridEventSubscriptions": "evgs-",
                              "eventHubNamespaces": "evhns-",
                              "eventHubNamespacesEventHubs": "evh-",
                              "hdInsightClustersHadoop": "hadoop-",
                              "hdInsightClustersHbase": "hbase-",
                              "hdInsightClustersKafka": "kafka-",
                              "hdInsightClustersMl": "mls-",
                              "hdInsightClustersSpark": "spark-",
                              "hdInsightClustersStorm": "storm-",
                              "hybridComputeMachines": "arcs-",
                              "insightsActionGroups": "ag-",
                              "insightsComponents": "appi-",
                              "keyVaultVaults": "kv-",
                              "kubernetesConnectedClusters": "arck",
                              "kustoClusters": "dec",
                              "kustoClustersDatabases": "dedb",
                              "logicIntegrationAccounts": "ia-",
                              "logicWorkflows": "logic-",
                              "machineLearningServicesWorkspaces": "mlw-",
                              "managedIdentityUserAssignedIdentities": "id-",
                              "managementManagementGroups": "mg-",
                              "migrateAssessmentProjects": "migr-",
                              "networkApplicationGateways": "agw-",
                              "networkApplicationSecurityGroups": "asg-",
                              "networkAzureFirewalls": "afw-",
                              "networkBastionHosts": "bas-",
                              "networkConnections": "con-",
                              "networkDnsZones": "dnsz-",
                              "networkExpressRouteCircuits": "erc-",
                              "networkFirewallPolicies": "afwp-",
                              "networkFirewallPoliciesWebApplication": "waf",
                              "networkFirewallPoliciesRuleGroups": "wafrg",
                              "networkFrontDoors": "fd-",
                              "networkFrontdoorWebApplicationFirewallPolicies": "fdfp-",
                              "networkLoadBalancersExternal": "lbe-",
                              "networkLoadBalancersInternal": "lbi-",
                              "networkLoadBalancersInboundNatRules": "rule-",
                              "networkLocalNetworkGateways": "lgw-",
                              "networkNatGateways": "ng-",
                              "networkNetworkInterfaces": "nic-",
                              "networkNetworkSecurityGroups": "nsg-",
                              "networkNetworkSecurityGroupsSecurityRules": "nsgsr-",
                              "networkNetworkWatchers": "nw-",
                              "networkPrivateDnsZones": "pdnsz-",
                              "networkPrivateLinkServices": "pl-",
                              "networkPublicIPAddresses": "pip-",
                              "networkPublicIPPrefixes": "ippre-",
                              "networkRouteFilters": "rf-",
                              "networkRouteTables": "rt-",
                              "networkRouteTablesRoutes": "udr-",
                              "networkTrafficManagerProfiles": "traf-",
                              "networkVirtualNetworkGateways": "vgw-",
                              "networkVirtualNetworks": "vnet-",
                              "networkVirtualNetworksSubnets": "snet-",
                              "networkVirtualNetworksVirtualNetworkPeerings": "peer-",
                              "networkVirtualWans": "vwan-",
                              "networkVpnGateways": "vpng-",
                              "networkVpnGatewaysVpnConnections": "vcn-",
                              "networkVpnGatewaysVpnSites": "vst-",
                              "notificationHubsNamespaces": "ntfns-",
                              "notificationHubsNamespacesNotificationHubs": "ntf-",
                              "operationalInsightsWorkspaces": "log-",
                              "portalDashboards": "dash-",
                              "powerBIDedicatedCapacities": "pbi-",
                              "purviewAccounts": "pview-",
                              "recoveryServicesVaults": "rsv-",
                              "resourcesResourceGroups": "rg-",
                              "searchSearchServices": "srch-",
                              "serviceBusNamespaces": "sb-",
                              "serviceBusNamespacesQueues": "sbq-",
                              "serviceBusNamespacesTopics": "sbt-",
                              "serviceEndPointPolicies": "se-",
                              "serviceFabricClusters": "sf-",
                              "signalRServiceSignalR": "sigr",
                              "sqlManagedInstances": "sqlmi-",
                              "sqlServers": "sql-",
                              "sqlServersDataWarehouse": "sqldw-",
                              "sqlServersDatabases": "sqldb-",
                              "sqlServersDatabasesStretch": "sqlstrdb-",
                              "storageStorageAccounts": "st",
                              "storageStorageAccountsVm": "stvm",
                              "storSimpleManagers": "ssimp",
                              "streamAnalyticsCluster": "asa-",
                              "synapseWorkspaces": "syn",
                              "synapseWorkspacesAnalyticsWorkspaces": "synw",
                              "synapseWorkspacesSqlPoolsDedicated": "syndp",
                              "synapseWorkspacesSqlPoolsSpark": "synsp",
                              "timeSeriesInsightsEnvironments": "tsi-",
                              "webServerFarms": "plan-",
                              "webSitesAppService": "app-",
                              "webSitesAppServiceEnvironment": "ase-",
                              "webSitesFunctions": "func-",
                              "webStaticSites": "stapp-"
                            },
                            "abbrs": "[variables('$fxv#0')]",
                            "resourceToken": "[toLower(uniqueString(subscription().id, parameters('environmentName'), parameters('location')))]"
                          },
                          "resources": [
                            {
                              "copy": {
                                "name": "list",
                                "count": "[length(parameters('containers'))]"
                              },
                              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
                              "apiVersion": "2022-05-15",
                              "name": "[format('{0}/{1}/{2}', split(format('{0}{1}/{2}', variables('abbrs').documentDBDatabaseAccounts, variables('resourceToken'), parameters('cosmosDatabaseName')), '/')[0], split(format('{0}{1}/{2}', variables('abbrs').documentDBDatabaseAccounts, variables('resourceToken'), parameters('cosmosDatabaseName')), '/')[1], parameters('containers')[copyIndex()].name)]",
                              "properties": {
                                "resource": {
                                  "id": "[parameters('containers')[copyIndex()].id]",
                                  "partitionKey": {
                                    "paths": [
                                      "[parameters('containers')[copyIndex()].partitionKey]"
                                    ]
                                  }
                                },
                                "options": {}
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', split(format('{0}{1}/{2}', variables('abbrs').documentDBDatabaseAccounts, variables('resourceToken'), parameters('cosmosDatabaseName')), '/')[0], split(format('{0}{1}/{2}', variables('abbrs').documentDBDatabaseAccounts, variables('resourceToken'), parameters('cosmosDatabaseName')), '/')[1])]"
                              ]
                            },
                            {
                              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
                              "apiVersion": "2022-05-15",
                              "name": "[format('{0}{1}/{2}', variables('abbrs').documentDBDatabaseAccounts, variables('resourceToken'), parameters('cosmosDatabaseName'))]",
                              "properties": {
                                "resource": {
                                  "id": "[parameters('cosmosDatabaseName')]"
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Resources/deployments', 'cosmos-sql-account')]"
                              ]
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "cosmos-sql-account",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "environmentName": {
                                    "value": "[parameters('environmentName')]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "keyVaultName": {
                                    "value": "[parameters('keyVaultName')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.10.13.619",
                                      "templateHash": "12820172063103746243"
                                    }
                                  },
                                  "parameters": {
                                    "environmentName": {
                                      "type": "string"
                                    },
                                    "location": {
                                      "type": "string",
                                      "defaultValue": "[resourceGroup().location]"
                                    },
                                    "keyVaultName": {
                                      "type": "string"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Resources/deployments",
                                      "apiVersion": "2020-10-01",
                                      "name": "cosmos-account",
                                      "properties": {
                                        "expressionEvaluationOptions": {
                                          "scope": "inner"
                                        },
                                        "mode": "Incremental",
                                        "parameters": {
                                          "environmentName": {
                                            "value": "[parameters('environmentName')]"
                                          },
                                          "location": {
                                            "value": "[parameters('location')]"
                                          },
                                          "keyVaultName": {
                                            "value": "[parameters('keyVaultName')]"
                                          },
                                          "kind": {
                                            "value": "GlobalDocumentDB"
                                          }
                                        },
                                        "template": {
                                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                          "contentVersion": "1.0.0.0",
                                          "metadata": {
                                            "_generator": {
                                              "name": "bicep",
                                              "version": "0.10.13.619",
                                              "templateHash": "1259868650361981041"
                                            }
                                          },
                                          "parameters": {
                                            "environmentName": {
                                              "type": "string"
                                            },
                                            "location": {
                                              "type": "string",
                                              "defaultValue": "[resourceGroup().location]"
                                            },
                                            "cosmosConnectionStringKey": {
                                              "type": "string",
                                              "defaultValue": "AZURE-COSMOS-CONNECTION-STRING"
                                            },
                                            "keyVaultName": {
                                              "type": "string"
                                            },
                                            "kind": {
                                              "type": "string",
                                              "allowedValues": [
                                                "GlobalDocumentDB",
                                                "MongoDB",
                                                "Parse"
                                              ]
                                            }
                                          },
                                          "variables": {
                                            "$fxv#0": {
                                              "analysisServicesServers": "as",
                                              "apiManagementService": "apim-",
                                              "appConfigurationConfigurationStores": "appcs-",
                                              "appManagedEnvironments": "cae-",
                                              "appContainerApps": "ca-",
                                              "authorizationPolicyDefinitions": "policy-",
                                              "automationAutomationAccounts": "aa-",
                                              "blueprintBlueprints": "bp-",
                                              "blueprintBlueprintsArtifacts": "bpa-",
                                              "cacheRedis": "redis-",
                                              "cdnProfiles": "cdnp-",
                                              "cdnProfilesEndpoints": "cdne-",
                                              "cognitiveServicesAccounts": "cog-",
                                              "cognitiveServicesFormRecognizer": "cog-fr-",
                                              "cognitiveServicesTextAnalytics": "cog-ta-",
                                              "computeAvailabilitySets": "avail-",
                                              "computeCloudServices": "cld-",
                                              "computeDiskEncryptionSets": "des",
                                              "computeDisks": "disk",
                                              "computeDisksOs": "osdisk",
                                              "computeGalleries": "gal",
                                              "computeSnapshots": "snap-",
                                              "computeVirtualMachines": "vm",
                                              "computeVirtualMachineScaleSets": "vmss-",
                                              "containerInstanceContainerGroups": "ci",
                                              "containerRegistryRegistries": "cr",
                                              "containerServiceManagedClusters": "aks-",
                                              "databricksWorkspaces": "dbw-",
                                              "dataFactoryFactories": "adf-",
                                              "dataLakeAnalyticsAccounts": "dla",
                                              "dataLakeStoreAccounts": "dls",
                                              "dataMigrationServices": "dms-",
                                              "dBforMySQLServers": "mysql-",
                                              "dBforPostgreSQLServers": "psql-",
                                              "devicesIotHubs": "iot-",
                                              "devicesProvisioningServices": "provs-",
                                              "devicesProvisioningServicesCertificates": "pcert-",
                                              "documentDBDatabaseAccounts": "cosmos-",
                                              "eventGridDomains": "evgd-",
                                              "eventGridDomainsTopics": "evgt-",
                                              "eventGridEventSubscriptions": "evgs-",
                                              "eventHubNamespaces": "evhns-",
                                              "eventHubNamespacesEventHubs": "evh-",
                                              "hdInsightClustersHadoop": "hadoop-",
                                              "hdInsightClustersHbase": "hbase-",
                                              "hdInsightClustersKafka": "kafka-",
                                              "hdInsightClustersMl": "mls-",
                                              "hdInsightClustersSpark": "spark-",
                                              "hdInsightClustersStorm": "storm-",
                                              "hybridComputeMachines": "arcs-",
                                              "insightsActionGroups": "ag-",
                                              "insightsComponents": "appi-",
                                              "keyVaultVaults": "kv-",
                                              "kubernetesConnectedClusters": "arck",
                                              "kustoClusters": "dec",
                                              "kustoClustersDatabases": "dedb",
                                              "logicIntegrationAccounts": "ia-",
                                              "logicWorkflows": "logic-",
                                              "machineLearningServicesWorkspaces": "mlw-",
                                              "managedIdentityUserAssignedIdentities": "id-",
                                              "managementManagementGroups": "mg-",
                                              "migrateAssessmentProjects": "migr-",
                                              "networkApplicationGateways": "agw-",
                                              "networkApplicationSecurityGroups": "asg-",
                                              "networkAzureFirewalls": "afw-",
                                              "networkBastionHosts": "bas-",
                                              "networkConnections": "con-",
                                              "networkDnsZones": "dnsz-",
                                              "networkExpressRouteCircuits": "erc-",
                                              "networkFirewallPolicies": "afwp-",
                                              "networkFirewallPoliciesWebApplication": "waf",
                                              "networkFirewallPoliciesRuleGroups": "wafrg",
                                              "networkFrontDoors": "fd-",
                                              "networkFrontdoorWebApplicationFirewallPolicies": "fdfp-",
                                              "networkLoadBalancersExternal": "lbe-",
                                              "networkLoadBalancersInternal": "lbi-",
                                              "networkLoadBalancersInboundNatRules": "rule-",
                                              "networkLocalNetworkGateways": "lgw-",
                                              "networkNatGateways": "ng-",
                                              "networkNetworkInterfaces": "nic-",
                                              "networkNetworkSecurityGroups": "nsg-",
                                              "networkNetworkSecurityGroupsSecurityRules": "nsgsr-",
                                              "networkNetworkWatchers": "nw-",
                                              "networkPrivateDnsZones": "pdnsz-",
                                              "networkPrivateLinkServices": "pl-",
                                              "networkPublicIPAddresses": "pip-",
                                              "networkPublicIPPrefixes": "ippre-",
                                              "networkRouteFilters": "rf-",
                                              "networkRouteTables": "rt-",
                                              "networkRouteTablesRoutes": "udr-",
                                              "networkTrafficManagerProfiles": "traf-",
                                              "networkVirtualNetworkGateways": "vgw-",
                                              "networkVirtualNetworks": "vnet-",
                                              "networkVirtualNetworksSubnets": "snet-",
                                              "networkVirtualNetworksVirtualNetworkPeerings": "peer-",
                                              "networkVirtualWans": "vwan-",
                                              "networkVpnGateways": "vpng-",
                                              "networkVpnGatewaysVpnConnections": "vcn-",
                                              "networkVpnGatewaysVpnSites": "vst-",
                                              "notificationHubsNamespaces": "ntfns-",
                                              "notificationHubsNamespacesNotificationHubs": "ntf-",
                                              "operationalInsightsWorkspaces": "log-",
                                              "portalDashboards": "dash-",
                                              "powerBIDedicatedCapacities": "pbi-",
                                              "purviewAccounts": "pview-",
                                              "recoveryServicesVaults": "rsv-",
                                              "resourcesResourceGroups": "rg-",
                                              "searchSearchServices": "srch-",
                                              "serviceBusNamespaces": "sb-",
                                              "serviceBusNamespacesQueues": "sbq-",
                                              "serviceBusNamespacesTopics": "sbt-",
                                              "serviceEndPointPolicies": "se-",
                                              "serviceFabricClusters": "sf-",
                                              "signalRServiceSignalR": "sigr",
                                              "sqlManagedInstances": "sqlmi-",
                                              "sqlServers": "sql-",
                                              "sqlServersDataWarehouse": "sqldw-",
                                              "sqlServersDatabases": "sqldb-",
                                              "sqlServersDatabasesStretch": "sqlstrdb-",
                                              "storageStorageAccounts": "st",
                                              "storageStorageAccountsVm": "stvm",
                                              "storSimpleManagers": "ssimp",
                                              "streamAnalyticsCluster": "asa-",
                                              "synapseWorkspaces": "syn",
                                              "synapseWorkspacesAnalyticsWorkspaces": "synw",
                                              "synapseWorkspacesSqlPoolsDedicated": "syndp",
                                              "synapseWorkspacesSqlPoolsSpark": "synsp",
                                              "timeSeriesInsightsEnvironments": "tsi-",
                                              "webServerFarms": "plan-",
                                              "webSitesAppService": "app-",
                                              "webSitesAppServiceEnvironment": "ase-",
                                              "webSitesFunctions": "func-",
                                              "webStaticSites": "stapp-"
                                            },
                                            "abbrs": "[variables('$fxv#0')]",
                                            "resourceToken": "[toLower(uniqueString(subscription().id, parameters('environmentName'), parameters('location')))]",
                                            "tags": {
                                              "azd-env-name": "[parameters('environmentName')]"
                                            }
                                          },
                                          "resources": [
                                            {
                                              "type": "Microsoft.DocumentDB/databaseAccounts",
                                              "apiVersion": "2022-05-15",
                                              "name": "[format('{0}{1}', variables('abbrs').documentDBDatabaseAccounts, variables('resourceToken'))]",
                                              "kind": "[parameters('kind')]",
                                              "location": "[parameters('location')]",
                                              "tags": "[variables('tags')]",
                                              "properties": {
                                                "consistencyPolicy": {
                                                  "defaultConsistencyLevel": "Session"
                                                },
                                                "locations": [
                                                  {
                                                    "locationName": "[parameters('location')]",
                                                    "failoverPriority": 0,
                                                    "isZoneRedundant": false
                                                  }
                                                ],
                                                "databaseAccountOfferType": "Standard",
                                                "enableAutomaticFailover": false,
                                                "enableMultipleWriteLocations": false,
                                                "apiProperties": "[if(equals(parameters('kind'), 'MongoDB'), createObject('serverVersion', '4.0'), createObject())]",
                                                "capabilities": [
                                                  {
                                                    "name": "EnableServerless"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "Microsoft.KeyVault/vaults/secrets",
                                              "apiVersion": "2022-07-01",
                                              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('cosmosConnectionStringKey'))]",
                                              "properties": {
                                                "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', format('{0}{1}', variables('abbrs').documentDBDatabaseAccounts, variables('resourceToken'))), '2022-05-15').connectionStrings[0].connectionString]"
                                              },
                                              "dependsOn": [
                                                "[resourceId('Microsoft.DocumentDB/databaseAccounts', format('{0}{1}', variables('abbrs').documentDBDatabaseAccounts, variables('resourceToken')))]"
                                              ]
                                            }
                                          ],
                                          "outputs": {
                                            "cosmosEndpoint": {
                                              "type": "string",
                                              "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', format('{0}{1}', variables('abbrs').documentDBDatabaseAccounts, variables('resourceToken')))).documentEndpoint]"
                                            },
                                            "cosmosConnectionStringKey": {
                                              "type": "string",
                                              "value": "[parameters('cosmosConnectionStringKey')]"
                                            },
                                            "cosmosResourceId": {
                                              "type": "string",
                                              "value": "[resourceId('Microsoft.DocumentDB/databaseAccounts', format('{0}{1}', variables('abbrs').documentDBDatabaseAccounts, variables('resourceToken')))]"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ],
                                  "outputs": {
                                    "cosmosEndpoint": {
                                      "type": "string",
                                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-account')).outputs.cosmosEndpoint.value]"
                                    },
                                    "cosmosConnectionStringKey": {
                                      "type": "string",
                                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-account')).outputs.cosmosConnectionStringKey.value]"
                                    },
                                    "cosmosResourceId": {
                                      "type": "string",
                                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-account')).outputs.cosmosResourceId.value]"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "cosmos-sql-role-definition",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "environmentName": {
                                    "value": "[parameters('environmentName')]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.10.13.619",
                                      "templateHash": "11397405842279524868"
                                    }
                                  },
                                  "parameters": {
                                    "environmentName": {
                                      "type": "string"
                                    },
                                    "location": {
                                      "type": "string",
                                      "defaultValue": "[resourceGroup().location]"
                                    }
                                  },
                                  "variables": {
                                    "$fxv#0": {
                                      "analysisServicesServers": "as",
                                      "apiManagementService": "apim-",
                                      "appConfigurationConfigurationStores": "appcs-",
                                      "appManagedEnvironments": "cae-",
                                      "appContainerApps": "ca-",
                                      "authorizationPolicyDefinitions": "policy-",
                                      "automationAutomationAccounts": "aa-",
                                      "blueprintBlueprints": "bp-",
                                      "blueprintBlueprintsArtifacts": "bpa-",
                                      "cacheRedis": "redis-",
                                      "cdnProfiles": "cdnp-",
                                      "cdnProfilesEndpoints": "cdne-",
                                      "cognitiveServicesAccounts": "cog-",
                                      "cognitiveServicesFormRecognizer": "cog-fr-",
                                      "cognitiveServicesTextAnalytics": "cog-ta-",
                                      "computeAvailabilitySets": "avail-",
                                      "computeCloudServices": "cld-",
                                      "computeDiskEncryptionSets": "des",
                                      "computeDisks": "disk",
                                      "computeDisksOs": "osdisk",
                                      "computeGalleries": "gal",
                                      "computeSnapshots": "snap-",
                                      "computeVirtualMachines": "vm",
                                      "computeVirtualMachineScaleSets": "vmss-",
                                      "containerInstanceContainerGroups": "ci",
                                      "containerRegistryRegistries": "cr",
                                      "containerServiceManagedClusters": "aks-",
                                      "databricksWorkspaces": "dbw-",
                                      "dataFactoryFactories": "adf-",
                                      "dataLakeAnalyticsAccounts": "dla",
                                      "dataLakeStoreAccounts": "dls",
                                      "dataMigrationServices": "dms-",
                                      "dBforMySQLServers": "mysql-",
                                      "dBforPostgreSQLServers": "psql-",
                                      "devicesIotHubs": "iot-",
                                      "devicesProvisioningServices": "provs-",
                                      "devicesProvisioningServicesCertificates": "pcert-",
                                      "documentDBDatabaseAccounts": "cosmos-",
                                      "eventGridDomains": "evgd-",
                                      "eventGridDomainsTopics": "evgt-",
                                      "eventGridEventSubscriptions": "evgs-",
                                      "eventHubNamespaces": "evhns-",
                                      "eventHubNamespacesEventHubs": "evh-",
                                      "hdInsightClustersHadoop": "hadoop-",
                                      "hdInsightClustersHbase": "hbase-",
                                      "hdInsightClustersKafka": "kafka-",
                                      "hdInsightClustersMl": "mls-",
                                      "hdInsightClustersSpark": "spark-",
                                      "hdInsightClustersStorm": "storm-",
                                      "hybridComputeMachines": "arcs-",
                                      "insightsActionGroups": "ag-",
                                      "insightsComponents": "appi-",
                                      "keyVaultVaults": "kv-",
                                      "kubernetesConnectedClusters": "arck",
                                      "kustoClusters": "dec",
                                      "kustoClustersDatabases": "dedb",
                                      "logicIntegrationAccounts": "ia-",
                                      "logicWorkflows": "logic-",
                                      "machineLearningServicesWorkspaces": "mlw-",
                                      "managedIdentityUserAssignedIdentities": "id-",
                                      "managementManagementGroups": "mg-",
                                      "migrateAssessmentProjects": "migr-",
                                      "networkApplicationGateways": "agw-",
                                      "networkApplicationSecurityGroups": "asg-",
                                      "networkAzureFirewalls": "afw-",
                                      "networkBastionHosts": "bas-",
                                      "networkConnections": "con-",
                                      "networkDnsZones": "dnsz-",
                                      "networkExpressRouteCircuits": "erc-",
                                      "networkFirewallPolicies": "afwp-",
                                      "networkFirewallPoliciesWebApplication": "waf",
                                      "networkFirewallPoliciesRuleGroups": "wafrg",
                                      "networkFrontDoors": "fd-",
                                      "networkFrontdoorWebApplicationFirewallPolicies": "fdfp-",
                                      "networkLoadBalancersExternal": "lbe-",
                                      "networkLoadBalancersInternal": "lbi-",
                                      "networkLoadBalancersInboundNatRules": "rule-",
                                      "networkLocalNetworkGateways": "lgw-",
                                      "networkNatGateways": "ng-",
                                      "networkNetworkInterfaces": "nic-",
                                      "networkNetworkSecurityGroups": "nsg-",
                                      "networkNetworkSecurityGroupsSecurityRules": "nsgsr-",
                                      "networkNetworkWatchers": "nw-",
                                      "networkPrivateDnsZones": "pdnsz-",
                                      "networkPrivateLinkServices": "pl-",
                                      "networkPublicIPAddresses": "pip-",
                                      "networkPublicIPPrefixes": "ippre-",
                                      "networkRouteFilters": "rf-",
                                      "networkRouteTables": "rt-",
                                      "networkRouteTablesRoutes": "udr-",
                                      "networkTrafficManagerProfiles": "traf-",
                                      "networkVirtualNetworkGateways": "vgw-",
                                      "networkVirtualNetworks": "vnet-",
                                      "networkVirtualNetworksSubnets": "snet-",
                                      "networkVirtualNetworksVirtualNetworkPeerings": "peer-",
                                      "networkVirtualWans": "vwan-",
                                      "networkVpnGateways": "vpng-",
                                      "networkVpnGatewaysVpnConnections": "vcn-",
                                      "networkVpnGatewaysVpnSites": "vst-",
                                      "notificationHubsNamespaces": "ntfns-",
                                      "notificationHubsNamespacesNotificationHubs": "ntf-",
                                      "operationalInsightsWorkspaces": "log-",
                                      "portalDashboards": "dash-",
                                      "powerBIDedicatedCapacities": "pbi-",
                                      "purviewAccounts": "pview-",
                                      "recoveryServicesVaults": "rsv-",
                                      "resourcesResourceGroups": "rg-",
                                      "searchSearchServices": "srch-",
                                      "serviceBusNamespaces": "sb-",
                                      "serviceBusNamespacesQueues": "sbq-",
                                      "serviceBusNamespacesTopics": "sbt-",
                                      "serviceEndPointPolicies": "se-",
                                      "serviceFabricClusters": "sf-",
                                      "signalRServiceSignalR": "sigr",
                                      "sqlManagedInstances": "sqlmi-",
                                      "sqlServers": "sql-",
                                      "sqlServersDataWarehouse": "sqldw-",
                                      "sqlServersDatabases": "sqldb-",
                                      "sqlServersDatabasesStretch": "sqlstrdb-",
                                      "storageStorageAccounts": "st",
                                      "storageStorageAccountsVm": "stvm",
                                      "storSimpleManagers": "ssimp",
                                      "streamAnalyticsCluster": "asa-",
                                      "synapseWorkspaces": "syn",
                                      "synapseWorkspacesAnalyticsWorkspaces": "synw",
                                      "synapseWorkspacesSqlPoolsDedicated": "syndp",
                                      "synapseWorkspacesSqlPoolsSpark": "synsp",
                                      "timeSeriesInsightsEnvironments": "tsi-",
                                      "webServerFarms": "plan-",
                                      "webSitesAppService": "app-",
                                      "webSitesAppServiceEnvironment": "ase-",
                                      "webSitesFunctions": "func-",
                                      "webStaticSites": "stapp-"
                                    },
                                    "abbrs": "[variables('$fxv#0')]",
                                    "resourceToken": "[toLower(uniqueString(subscription().id, parameters('environmentName'), parameters('location')))]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
                                      "apiVersion": "2022-05-15",
                                      "name": "[format('{0}/{1}', format('{0}{1}', variables('abbrs').documentDBDatabaseAccounts, variables('resourceToken')), guid(resourceId('Microsoft.DocumentDB/databaseAccounts', format('{0}{1}', variables('abbrs').documentDBDatabaseAccounts, variables('resourceToken'))), variables('resourceToken'), 'sql-role'))]",
                                      "properties": {
                                        "assignableScopes": [
                                          "[resourceId('Microsoft.DocumentDB/databaseAccounts', format('{0}{1}', variables('abbrs').documentDBDatabaseAccounts, variables('resourceToken')))]"
                                        ],
                                        "permissions": [
                                          {
                                            "dataActions": [
                                              "Microsoft.DocumentDB/databaseAccounts/readMetadata",
                                              "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/*",
                                              "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/*"
                                            ],
                                            "notDataActions": []
                                          }
                                        ],
                                        "roleName": "Reader Writer",
                                        "type": "CustomRole"
                                      }
                                    }
                                  ],
                                  "outputs": {
                                    "cosmosSqlRoleDefinitionId": {
                                      "type": "string",
                                      "value": "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions', format('{0}{1}', variables('abbrs').documentDBDatabaseAccounts, variables('resourceToken')), guid(resourceId('Microsoft.DocumentDB/databaseAccounts', format('{0}{1}', variables('abbrs').documentDBDatabaseAccounts, variables('resourceToken'))), variables('resourceToken'), 'sql-role'))]"
                                    }
                                  }
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Resources/deployments', 'cosmos-sql-account')]",
                                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', split(format('{0}{1}/{2}', variables('abbrs').documentDBDatabaseAccounts, variables('resourceToken'), parameters('cosmosDatabaseName')), '/')[0], split(format('{0}{1}/{2}', variables('abbrs').documentDBDatabaseAccounts, variables('resourceToken'), parameters('cosmosDatabaseName')), '/')[1])]"
                              ]
                            },
                            {
                              "condition": "[not(empty(parameters('principalIds')[copyIndex()]))]",
                              "copy": {
                                "name": "userRole",
                                "count": "[length(parameters('principalIds'))]",
                                "mode": "serial",
                                "batchSize": 1
                              },
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "[format('cosmos-sql-user-role-{0}', uniqueString(parameters('principalIds')[copyIndex()]))]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "environmentName": {
                                    "value": "[parameters('environmentName')]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "cosmosRoleDefinitionId": {
                                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-sql-role-definition')).outputs.cosmosSqlRoleDefinitionId.value]"
                                  },
                                  "principalId": {
                                    "value": "[parameters('principalIds')[copyIndex()]]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.10.13.619",
                                      "templateHash": "16369358343898749347"
                                    }
                                  },
                                  "parameters": {
                                    "environmentName": {
                                      "type": "string"
                                    },
                                    "location": {
                                      "type": "string",
                                      "defaultValue": "[resourceGroup().location]"
                                    },
                                    "cosmosRoleDefinitionId": {
                                      "type": "string"
                                    },
                                    "principalId": {
                                      "type": "string",
                                      "defaultValue": ""
                                    }
                                  },
                                  "variables": {
                                    "$fxv#0": {
                                      "analysisServicesServers": "as",
                                      "apiManagementService": "apim-",
                                      "appConfigurationConfigurationStores": "appcs-",
                                      "appManagedEnvironments": "cae-",
                                      "appContainerApps": "ca-",
                                      "authorizationPolicyDefinitions": "policy-",
                                      "automationAutomationAccounts": "aa-",
                                      "blueprintBlueprints": "bp-",
                                      "blueprintBlueprintsArtifacts": "bpa-",
                                      "cacheRedis": "redis-",
                                      "cdnProfiles": "cdnp-",
                                      "cdnProfilesEndpoints": "cdne-",
                                      "cognitiveServicesAccounts": "cog-",
                                      "cognitiveServicesFormRecognizer": "cog-fr-",
                                      "cognitiveServicesTextAnalytics": "cog-ta-",
                                      "computeAvailabilitySets": "avail-",
                                      "computeCloudServices": "cld-",
                                      "computeDiskEncryptionSets": "des",
                                      "computeDisks": "disk",
                                      "computeDisksOs": "osdisk",
                                      "computeGalleries": "gal",
                                      "computeSnapshots": "snap-",
                                      "computeVirtualMachines": "vm",
                                      "computeVirtualMachineScaleSets": "vmss-",
                                      "containerInstanceContainerGroups": "ci",
                                      "containerRegistryRegistries": "cr",
                                      "containerServiceManagedClusters": "aks-",
                                      "databricksWorkspaces": "dbw-",
                                      "dataFactoryFactories": "adf-",
                                      "dataLakeAnalyticsAccounts": "dla",
                                      "dataLakeStoreAccounts": "dls",
                                      "dataMigrationServices": "dms-",
                                      "dBforMySQLServers": "mysql-",
                                      "dBforPostgreSQLServers": "psql-",
                                      "devicesIotHubs": "iot-",
                                      "devicesProvisioningServices": "provs-",
                                      "devicesProvisioningServicesCertificates": "pcert-",
                                      "documentDBDatabaseAccounts": "cosmos-",
                                      "eventGridDomains": "evgd-",
                                      "eventGridDomainsTopics": "evgt-",
                                      "eventGridEventSubscriptions": "evgs-",
                                      "eventHubNamespaces": "evhns-",
                                      "eventHubNamespacesEventHubs": "evh-",
                                      "hdInsightClustersHadoop": "hadoop-",
                                      "hdInsightClustersHbase": "hbase-",
                                      "hdInsightClustersKafka": "kafka-",
                                      "hdInsightClustersMl": "mls-",
                                      "hdInsightClustersSpark": "spark-",
                                      "hdInsightClustersStorm": "storm-",
                                      "hybridComputeMachines": "arcs-",
                                      "insightsActionGroups": "ag-",
                                      "insightsComponents": "appi-",
                                      "keyVaultVaults": "kv-",
                                      "kubernetesConnectedClusters": "arck",
                                      "kustoClusters": "dec",
                                      "kustoClustersDatabases": "dedb",
                                      "logicIntegrationAccounts": "ia-",
                                      "logicWorkflows": "logic-",
                                      "machineLearningServicesWorkspaces": "mlw-",
                                      "managedIdentityUserAssignedIdentities": "id-",
                                      "managementManagementGroups": "mg-",
                                      "migrateAssessmentProjects": "migr-",
                                      "networkApplicationGateways": "agw-",
                                      "networkApplicationSecurityGroups": "asg-",
                                      "networkAzureFirewalls": "afw-",
                                      "networkBastionHosts": "bas-",
                                      "networkConnections": "con-",
                                      "networkDnsZones": "dnsz-",
                                      "networkExpressRouteCircuits": "erc-",
                                      "networkFirewallPolicies": "afwp-",
                                      "networkFirewallPoliciesWebApplication": "waf",
                                      "networkFirewallPoliciesRuleGroups": "wafrg",
                                      "networkFrontDoors": "fd-",
                                      "networkFrontdoorWebApplicationFirewallPolicies": "fdfp-",
                                      "networkLoadBalancersExternal": "lbe-",
                                      "networkLoadBalancersInternal": "lbi-",
                                      "networkLoadBalancersInboundNatRules": "rule-",
                                      "networkLocalNetworkGateways": "lgw-",
                                      "networkNatGateways": "ng-",
                                      "networkNetworkInterfaces": "nic-",
                                      "networkNetworkSecurityGroups": "nsg-",
                                      "networkNetworkSecurityGroupsSecurityRules": "nsgsr-",
                                      "networkNetworkWatchers": "nw-",
                                      "networkPrivateDnsZones": "pdnsz-",
                                      "networkPrivateLinkServices": "pl-",
                                      "networkPublicIPAddresses": "pip-",
                                      "networkPublicIPPrefixes": "ippre-",
                                      "networkRouteFilters": "rf-",
                                      "networkRouteTables": "rt-",
                                      "networkRouteTablesRoutes": "udr-",
                                      "networkTrafficManagerProfiles": "traf-",
                                      "networkVirtualNetworkGateways": "vgw-",
                                      "networkVirtualNetworks": "vnet-",
                                      "networkVirtualNetworksSubnets": "snet-",
                                      "networkVirtualNetworksVirtualNetworkPeerings": "peer-",
                                      "networkVirtualWans": "vwan-",
                                      "networkVpnGateways": "vpng-",
                                      "networkVpnGatewaysVpnConnections": "vcn-",
                                      "networkVpnGatewaysVpnSites": "vst-",
                                      "notificationHubsNamespaces": "ntfns-",
                                      "notificationHubsNamespacesNotificationHubs": "ntf-",
                                      "operationalInsightsWorkspaces": "log-",
                                      "portalDashboards": "dash-",
                                      "powerBIDedicatedCapacities": "pbi-",
                                      "purviewAccounts": "pview-",
                                      "recoveryServicesVaults": "rsv-",
                                      "resourcesResourceGroups": "rg-",
                                      "searchSearchServices": "srch-",
                                      "serviceBusNamespaces": "sb-",
                                      "serviceBusNamespacesQueues": "sbq-",
                                      "serviceBusNamespacesTopics": "sbt-",
                                      "serviceEndPointPolicies": "se-",
                                      "serviceFabricClusters": "sf-",
                                      "signalRServiceSignalR": "sigr",
                                      "sqlManagedInstances": "sqlmi-",
                                      "sqlServers": "sql-",
                                      "sqlServersDataWarehouse": "sqldw-",
                                      "sqlServersDatabases": "sqldb-",
                                      "sqlServersDatabasesStretch": "sqlstrdb-",
                                      "storageStorageAccounts": "st",
                                      "storageStorageAccountsVm": "stvm",
                                      "storSimpleManagers": "ssimp",
                                      "streamAnalyticsCluster": "asa-",
                                      "synapseWorkspaces": "syn",
                                      "synapseWorkspacesAnalyticsWorkspaces": "synw",
                                      "synapseWorkspacesSqlPoolsDedicated": "syndp",
                                      "synapseWorkspacesSqlPoolsSpark": "synsp",
                                      "timeSeriesInsightsEnvironments": "tsi-",
                                      "webServerFarms": "plan-",
                                      "webSitesAppService": "app-",
                                      "webSitesAppServiceEnvironment": "ase-",
                                      "webSitesFunctions": "func-",
                                      "webStaticSites": "stapp-"
                                    },
                                    "abbrs": "[variables('$fxv#0')]",
                                    "resourceToken": "[toLower(uniqueString(subscription().id, parameters('environmentName'), parameters('location')))]"
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleAssignments",
                                      "apiVersion": "2022-05-15",
                                      "name": "[format('{0}/{1}', format('{0}{1}', variables('abbrs').documentDBDatabaseAccounts, variables('resourceToken')), guid(parameters('cosmosRoleDefinitionId'), parameters('principalId'), resourceId('Microsoft.DocumentDB/databaseAccounts', format('{0}{1}', variables('abbrs').documentDBDatabaseAccounts, variables('resourceToken')))))]",
                                      "properties": {
                                        "principalId": "[parameters('principalId')]",
                                        "roleDefinitionId": "[parameters('cosmosRoleDefinitionId')]",
                                        "scope": "[resourceId('Microsoft.DocumentDB/databaseAccounts', format('{0}{1}', variables('abbrs').documentDBDatabaseAccounts, variables('resourceToken')))]"
                                      }
                                    }
                                  ]
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Resources/deployments', 'cosmos-sql-account')]",
                                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', split(format('{0}{1}/{2}', variables('abbrs').documentDBDatabaseAccounts, variables('resourceToken'), parameters('cosmosDatabaseName')), '/')[0], split(format('{0}{1}/{2}', variables('abbrs').documentDBDatabaseAccounts, variables('resourceToken'), parameters('cosmosDatabaseName')), '/')[1])]",
                                "[resourceId('Microsoft.Resources/deployments', 'cosmos-sql-role-definition')]"
                              ]
                            }
                          ],
                          "outputs": {
                            "cosmosConnectionStringKey": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-sql-account')).outputs.cosmosConnectionStringKey.value]"
                            },
                            "cosmosDatabaseName": {
                              "type": "string",
                              "value": "[parameters('cosmosDatabaseName')]"
                            },
                            "cosmosEndpoint": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-sql-account')).outputs.cosmosEndpoint.value]"
                            },
                            "cosmosResourceId": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-sql-account')).outputs.cosmosResourceId.value]"
                            },
                            "cosmosSqlRoleDefinitionId": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-sql-role-definition')).outputs.cosmosSqlRoleDefinitionId.value]"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "cosmosConnectionStringKey": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-sql')).outputs.cosmosConnectionStringKey.value]"
                    },
                    "cosmosDatabaseName": {
                      "type": "string",
                      "value": "[parameters('cosmosDatabaseName')]"
                    },
                    "cosmosEndpoint": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-sql')).outputs.cosmosEndpoint.value]"
                    },
                    "cosmosSqlRoleDefinitionId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-sql')).outputs.cosmosSqlRoleDefinitionId.value]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'keyvault')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "appserviceplan",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "environmentName": {
                    "value": "[parameters('environmentName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "sku": {
                    "value": {
                      "name": "B1"
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.10.13.619",
                      "templateHash": "13292972318815481588"
                    }
                  },
                  "parameters": {
                    "environmentName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "kind": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "reserved": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "sku": {
                      "type": "object"
                    }
                  },
                  "variables": {
                    "$fxv#0": {
                      "analysisServicesServers": "as",
                      "apiManagementService": "apim-",
                      "appConfigurationConfigurationStores": "appcs-",
                      "appManagedEnvironments": "cae-",
                      "appContainerApps": "ca-",
                      "authorizationPolicyDefinitions": "policy-",
                      "automationAutomationAccounts": "aa-",
                      "blueprintBlueprints": "bp-",
                      "blueprintBlueprintsArtifacts": "bpa-",
                      "cacheRedis": "redis-",
                      "cdnProfiles": "cdnp-",
                      "cdnProfilesEndpoints": "cdne-",
                      "cognitiveServicesAccounts": "cog-",
                      "cognitiveServicesFormRecognizer": "cog-fr-",
                      "cognitiveServicesTextAnalytics": "cog-ta-",
                      "computeAvailabilitySets": "avail-",
                      "computeCloudServices": "cld-",
                      "computeDiskEncryptionSets": "des",
                      "computeDisks": "disk",
                      "computeDisksOs": "osdisk",
                      "computeGalleries": "gal",
                      "computeSnapshots": "snap-",
                      "computeVirtualMachines": "vm",
                      "computeVirtualMachineScaleSets": "vmss-",
                      "containerInstanceContainerGroups": "ci",
                      "containerRegistryRegistries": "cr",
                      "containerServiceManagedClusters": "aks-",
                      "databricksWorkspaces": "dbw-",
                      "dataFactoryFactories": "adf-",
                      "dataLakeAnalyticsAccounts": "dla",
                      "dataLakeStoreAccounts": "dls",
                      "dataMigrationServices": "dms-",
                      "dBforMySQLServers": "mysql-",
                      "dBforPostgreSQLServers": "psql-",
                      "devicesIotHubs": "iot-",
                      "devicesProvisioningServices": "provs-",
                      "devicesProvisioningServicesCertificates": "pcert-",
                      "documentDBDatabaseAccounts": "cosmos-",
                      "eventGridDomains": "evgd-",
                      "eventGridDomainsTopics": "evgt-",
                      "eventGridEventSubscriptions": "evgs-",
                      "eventHubNamespaces": "evhns-",
                      "eventHubNamespacesEventHubs": "evh-",
                      "hdInsightClustersHadoop": "hadoop-",
                      "hdInsightClustersHbase": "hbase-",
                      "hdInsightClustersKafka": "kafka-",
                      "hdInsightClustersMl": "mls-",
                      "hdInsightClustersSpark": "spark-",
                      "hdInsightClustersStorm": "storm-",
                      "hybridComputeMachines": "arcs-",
                      "insightsActionGroups": "ag-",
                      "insightsComponents": "appi-",
                      "keyVaultVaults": "kv-",
                      "kubernetesConnectedClusters": "arck",
                      "kustoClusters": "dec",
                      "kustoClustersDatabases": "dedb",
                      "logicIntegrationAccounts": "ia-",
                      "logicWorkflows": "logic-",
                      "machineLearningServicesWorkspaces": "mlw-",
                      "managedIdentityUserAssignedIdentities": "id-",
                      "managementManagementGroups": "mg-",
                      "migrateAssessmentProjects": "migr-",
                      "networkApplicationGateways": "agw-",
                      "networkApplicationSecurityGroups": "asg-",
                      "networkAzureFirewalls": "afw-",
                      "networkBastionHosts": "bas-",
                      "networkConnections": "con-",
                      "networkDnsZones": "dnsz-",
                      "networkExpressRouteCircuits": "erc-",
                      "networkFirewallPolicies": "afwp-",
                      "networkFirewallPoliciesWebApplication": "waf",
                      "networkFirewallPoliciesRuleGroups": "wafrg",
                      "networkFrontDoors": "fd-",
                      "networkFrontdoorWebApplicationFirewallPolicies": "fdfp-",
                      "networkLoadBalancersExternal": "lbe-",
                      "networkLoadBalancersInternal": "lbi-",
                      "networkLoadBalancersInboundNatRules": "rule-",
                      "networkLocalNetworkGateways": "lgw-",
                      "networkNatGateways": "ng-",
                      "networkNetworkInterfaces": "nic-",
                      "networkNetworkSecurityGroups": "nsg-",
                      "networkNetworkSecurityGroupsSecurityRules": "nsgsr-",
                      "networkNetworkWatchers": "nw-",
                      "networkPrivateDnsZones": "pdnsz-",
                      "networkPrivateLinkServices": "pl-",
                      "networkPublicIPAddresses": "pip-",
                      "networkPublicIPPrefixes": "ippre-",
                      "networkRouteFilters": "rf-",
                      "networkRouteTables": "rt-",
                      "networkRouteTablesRoutes": "udr-",
                      "networkTrafficManagerProfiles": "traf-",
                      "networkVirtualNetworkGateways": "vgw-",
                      "networkVirtualNetworks": "vnet-",
                      "networkVirtualNetworksSubnets": "snet-",
                      "networkVirtualNetworksVirtualNetworkPeerings": "peer-",
                      "networkVirtualWans": "vwan-",
                      "networkVpnGateways": "vpng-",
                      "networkVpnGatewaysVpnConnections": "vcn-",
                      "networkVpnGatewaysVpnSites": "vst-",
                      "notificationHubsNamespaces": "ntfns-",
                      "notificationHubsNamespacesNotificationHubs": "ntf-",
                      "operationalInsightsWorkspaces": "log-",
                      "portalDashboards": "dash-",
                      "powerBIDedicatedCapacities": "pbi-",
                      "purviewAccounts": "pview-",
                      "recoveryServicesVaults": "rsv-",
                      "resourcesResourceGroups": "rg-",
                      "searchSearchServices": "srch-",
                      "serviceBusNamespaces": "sb-",
                      "serviceBusNamespacesQueues": "sbq-",
                      "serviceBusNamespacesTopics": "sbt-",
                      "serviceEndPointPolicies": "se-",
                      "serviceFabricClusters": "sf-",
                      "signalRServiceSignalR": "sigr",
                      "sqlManagedInstances": "sqlmi-",
                      "sqlServers": "sql-",
                      "sqlServersDataWarehouse": "sqldw-",
                      "sqlServersDatabases": "sqldb-",
                      "sqlServersDatabasesStretch": "sqlstrdb-",
                      "storageStorageAccounts": "st",
                      "storageStorageAccountsVm": "stvm",
                      "storSimpleManagers": "ssimp",
                      "streamAnalyticsCluster": "asa-",
                      "synapseWorkspaces": "syn",
                      "synapseWorkspacesAnalyticsWorkspaces": "synw",
                      "synapseWorkspacesSqlPoolsDedicated": "syndp",
                      "synapseWorkspacesSqlPoolsSpark": "synsp",
                      "timeSeriesInsightsEnvironments": "tsi-",
                      "webServerFarms": "plan-",
                      "webSitesAppService": "app-",
                      "webSitesAppServiceEnvironment": "ase-",
                      "webSitesFunctions": "func-",
                      "webStaticSites": "stapp-"
                    },
                    "abbrs": "[variables('$fxv#0')]",
                    "resourceToken": "[toLower(uniqueString(subscription().id, parameters('environmentName'), parameters('location')))]",
                    "tags": {
                      "azd-env-name": "[parameters('environmentName')]"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Web/serverfarms",
                      "apiVersion": "2022-03-01",
                      "name": "[format('{0}{1}', variables('abbrs').webServerFarms, variables('resourceToken'))]",
                      "location": "[parameters('location')]",
                      "tags": "[variables('tags')]",
                      "sku": "[parameters('sku')]",
                      "kind": "[parameters('kind')]",
                      "properties": {
                        "reserved": "[parameters('reserved')]"
                      }
                    }
                  ],
                  "outputs": {
                    "appServicePlanId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Web/serverfarms', format('{0}{1}', variables('abbrs').webServerFarms, variables('resourceToken')))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "keyvault",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "environmentName": {
                    "value": "[parameters('environmentName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "principalId": {
                    "value": "[parameters('principalId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.10.13.619",
                      "templateHash": "9964290783644459412"
                    }
                  },
                  "parameters": {
                    "environmentName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "keyVaultName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "principalId": {
                      "type": "string",
                      "defaultValue": ""
                    }
                  },
                  "variables": {
                    "$fxv#0": {
                      "analysisServicesServers": "as",
                      "apiManagementService": "apim-",
                      "appConfigurationConfigurationStores": "appcs-",
                      "appManagedEnvironments": "cae-",
                      "appContainerApps": "ca-",
                      "authorizationPolicyDefinitions": "policy-",
                      "automationAutomationAccounts": "aa-",
                      "blueprintBlueprints": "bp-",
                      "blueprintBlueprintsArtifacts": "bpa-",
                      "cacheRedis": "redis-",
                      "cdnProfiles": "cdnp-",
                      "cdnProfilesEndpoints": "cdne-",
                      "cognitiveServicesAccounts": "cog-",
                      "cognitiveServicesFormRecognizer": "cog-fr-",
                      "cognitiveServicesTextAnalytics": "cog-ta-",
                      "computeAvailabilitySets": "avail-",
                      "computeCloudServices": "cld-",
                      "computeDiskEncryptionSets": "des",
                      "computeDisks": "disk",
                      "computeDisksOs": "osdisk",
                      "computeGalleries": "gal",
                      "computeSnapshots": "snap-",
                      "computeVirtualMachines": "vm",
                      "computeVirtualMachineScaleSets": "vmss-",
                      "containerInstanceContainerGroups": "ci",
                      "containerRegistryRegistries": "cr",
                      "containerServiceManagedClusters": "aks-",
                      "databricksWorkspaces": "dbw-",
                      "dataFactoryFactories": "adf-",
                      "dataLakeAnalyticsAccounts": "dla",
                      "dataLakeStoreAccounts": "dls",
                      "dataMigrationServices": "dms-",
                      "dBforMySQLServers": "mysql-",
                      "dBforPostgreSQLServers": "psql-",
                      "devicesIotHubs": "iot-",
                      "devicesProvisioningServices": "provs-",
                      "devicesProvisioningServicesCertificates": "pcert-",
                      "documentDBDatabaseAccounts": "cosmos-",
                      "eventGridDomains": "evgd-",
                      "eventGridDomainsTopics": "evgt-",
                      "eventGridEventSubscriptions": "evgs-",
                      "eventHubNamespaces": "evhns-",
                      "eventHubNamespacesEventHubs": "evh-",
                      "hdInsightClustersHadoop": "hadoop-",
                      "hdInsightClustersHbase": "hbase-",
                      "hdInsightClustersKafka": "kafka-",
                      "hdInsightClustersMl": "mls-",
                      "hdInsightClustersSpark": "spark-",
                      "hdInsightClustersStorm": "storm-",
                      "hybridComputeMachines": "arcs-",
                      "insightsActionGroups": "ag-",
                      "insightsComponents": "appi-",
                      "keyVaultVaults": "kv-",
                      "kubernetesConnectedClusters": "arck",
                      "kustoClusters": "dec",
                      "kustoClustersDatabases": "dedb",
                      "logicIntegrationAccounts": "ia-",
                      "logicWorkflows": "logic-",
                      "machineLearningServicesWorkspaces": "mlw-",
                      "managedIdentityUserAssignedIdentities": "id-",
                      "managementManagementGroups": "mg-",
                      "migrateAssessmentProjects": "migr-",
                      "networkApplicationGateways": "agw-",
                      "networkApplicationSecurityGroups": "asg-",
                      "networkAzureFirewalls": "afw-",
                      "networkBastionHosts": "bas-",
                      "networkConnections": "con-",
                      "networkDnsZones": "dnsz-",
                      "networkExpressRouteCircuits": "erc-",
                      "networkFirewallPolicies": "afwp-",
                      "networkFirewallPoliciesWebApplication": "waf",
                      "networkFirewallPoliciesRuleGroups": "wafrg",
                      "networkFrontDoors": "fd-",
                      "networkFrontdoorWebApplicationFirewallPolicies": "fdfp-",
                      "networkLoadBalancersExternal": "lbe-",
                      "networkLoadBalancersInternal": "lbi-",
                      "networkLoadBalancersInboundNatRules": "rule-",
                      "networkLocalNetworkGateways": "lgw-",
                      "networkNatGateways": "ng-",
                      "networkNetworkInterfaces": "nic-",
                      "networkNetworkSecurityGroups": "nsg-",
                      "networkNetworkSecurityGroupsSecurityRules": "nsgsr-",
                      "networkNetworkWatchers": "nw-",
                      "networkPrivateDnsZones": "pdnsz-",
                      "networkPrivateLinkServices": "pl-",
                      "networkPublicIPAddresses": "pip-",
                      "networkPublicIPPrefixes": "ippre-",
                      "networkRouteFilters": "rf-",
                      "networkRouteTables": "rt-",
                      "networkRouteTablesRoutes": "udr-",
                      "networkTrafficManagerProfiles": "traf-",
                      "networkVirtualNetworkGateways": "vgw-",
                      "networkVirtualNetworks": "vnet-",
                      "networkVirtualNetworksSubnets": "snet-",
                      "networkVirtualNetworksVirtualNetworkPeerings": "peer-",
                      "networkVirtualWans": "vwan-",
                      "networkVpnGateways": "vpng-",
                      "networkVpnGatewaysVpnConnections": "vcn-",
                      "networkVpnGatewaysVpnSites": "vst-",
                      "notificationHubsNamespaces": "ntfns-",
                      "notificationHubsNamespacesNotificationHubs": "ntf-",
                      "operationalInsightsWorkspaces": "log-",
                      "portalDashboards": "dash-",
                      "powerBIDedicatedCapacities": "pbi-",
                      "purviewAccounts": "pview-",
                      "recoveryServicesVaults": "rsv-",
                      "resourcesResourceGroups": "rg-",
                      "searchSearchServices": "srch-",
                      "serviceBusNamespaces": "sb-",
                      "serviceBusNamespacesQueues": "sbq-",
                      "serviceBusNamespacesTopics": "sbt-",
                      "serviceEndPointPolicies": "se-",
                      "serviceFabricClusters": "sf-",
                      "signalRServiceSignalR": "sigr",
                      "sqlManagedInstances": "sqlmi-",
                      "sqlServers": "sql-",
                      "sqlServersDataWarehouse": "sqldw-",
                      "sqlServersDatabases": "sqldb-",
                      "sqlServersDatabasesStretch": "sqlstrdb-",
                      "storageStorageAccounts": "st",
                      "storageStorageAccountsVm": "stvm",
                      "storSimpleManagers": "ssimp",
                      "streamAnalyticsCluster": "asa-",
                      "synapseWorkspaces": "syn",
                      "synapseWorkspacesAnalyticsWorkspaces": "synw",
                      "synapseWorkspacesSqlPoolsDedicated": "syndp",
                      "synapseWorkspacesSqlPoolsSpark": "synsp",
                      "timeSeriesInsightsEnvironments": "tsi-",
                      "webServerFarms": "plan-",
                      "webSitesAppService": "app-",
                      "webSitesAppServiceEnvironment": "ase-",
                      "webSitesFunctions": "func-",
                      "webStaticSites": "stapp-"
                    },
                    "abbrs": "[variables('$fxv#0')]",
                    "resourceToken": "[toLower(uniqueString(subscription().id, parameters('environmentName'), parameters('location')))]",
                    "tags": {
                      "azd-env-name": "[parameters('environmentName')]"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults",
                      "apiVersion": "2022-07-01",
                      "name": "[if(not(empty(parameters('keyVaultName'))), parameters('keyVaultName'), format('{0}{1}', variables('abbrs').keyVaultVaults, variables('resourceToken')))]",
                      "location": "[parameters('location')]",
                      "tags": "[variables('tags')]",
                      "properties": {
                        "tenantId": "[subscription().tenantId]",
                        "sku": {
                          "family": "A",
                          "name": "standard"
                        },
                        "accessPolicies": "[if(not(empty(parameters('principalId'))), createArray(createObject('objectId', parameters('principalId'), 'permissions', createObject('secrets', createArray('get', 'list')), 'tenantId', subscription().tenantId)), createArray())]"
                      }
                    }
                  ],
                  "outputs": {
                    "keyVaultEndpoint": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.KeyVault/vaults', if(not(empty(parameters('keyVaultName'))), parameters('keyVaultName'), format('{0}{1}', variables('abbrs').keyVaultVaults, variables('resourceToken'))))).vaultUri]"
                    },
                    "keyVaultName": {
                      "type": "string",
                      "value": "[if(not(empty(parameters('keyVaultName'))), parameters('keyVaultName'), format('{0}{1}', variables('abbrs').keyVaultVaults, variables('resourceToken')))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "monitoring",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "environmentName": {
                    "value": "[parameters('environmentName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.10.13.619",
                      "templateHash": "4102260981730975457"
                    }
                  },
                  "parameters": {
                    "environmentName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "loganalytics",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "environmentName": {
                            "value": "[parameters('environmentName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.10.13.619",
                              "templateHash": "10819459068940421398"
                            }
                          },
                          "parameters": {
                            "environmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]"
                            }
                          },
                          "variables": {
                            "$fxv#0": {
                              "analysisServicesServers": "as",
                              "apiManagementService": "apim-",
                              "appConfigurationConfigurationStores": "appcs-",
                              "appManagedEnvironments": "cae-",
                              "appContainerApps": "ca-",
                              "authorizationPolicyDefinitions": "policy-",
                              "automationAutomationAccounts": "aa-",
                              "blueprintBlueprints": "bp-",
                              "blueprintBlueprintsArtifacts": "bpa-",
                              "cacheRedis": "redis-",
                              "cdnProfiles": "cdnp-",
                              "cdnProfilesEndpoints": "cdne-",
                              "cognitiveServicesAccounts": "cog-",
                              "cognitiveServicesFormRecognizer": "cog-fr-",
                              "cognitiveServicesTextAnalytics": "cog-ta-",
                              "computeAvailabilitySets": "avail-",
                              "computeCloudServices": "cld-",
                              "computeDiskEncryptionSets": "des",
                              "computeDisks": "disk",
                              "computeDisksOs": "osdisk",
                              "computeGalleries": "gal",
                              "computeSnapshots": "snap-",
                              "computeVirtualMachines": "vm",
                              "computeVirtualMachineScaleSets": "vmss-",
                              "containerInstanceContainerGroups": "ci",
                              "containerRegistryRegistries": "cr",
                              "containerServiceManagedClusters": "aks-",
                              "databricksWorkspaces": "dbw-",
                              "dataFactoryFactories": "adf-",
                              "dataLakeAnalyticsAccounts": "dla",
                              "dataLakeStoreAccounts": "dls",
                              "dataMigrationServices": "dms-",
                              "dBforMySQLServers": "mysql-",
                              "dBforPostgreSQLServers": "psql-",
                              "devicesIotHubs": "iot-",
                              "devicesProvisioningServices": "provs-",
                              "devicesProvisioningServicesCertificates": "pcert-",
                              "documentDBDatabaseAccounts": "cosmos-",
                              "eventGridDomains": "evgd-",
                              "eventGridDomainsTopics": "evgt-",
                              "eventGridEventSubscriptions": "evgs-",
                              "eventHubNamespaces": "evhns-",
                              "eventHubNamespacesEventHubs": "evh-",
                              "hdInsightClustersHadoop": "hadoop-",
                              "hdInsightClustersHbase": "hbase-",
                              "hdInsightClustersKafka": "kafka-",
                              "hdInsightClustersMl": "mls-",
                              "hdInsightClustersSpark": "spark-",
                              "hdInsightClustersStorm": "storm-",
                              "hybridComputeMachines": "arcs-",
                              "insightsActionGroups": "ag-",
                              "insightsComponents": "appi-",
                              "keyVaultVaults": "kv-",
                              "kubernetesConnectedClusters": "arck",
                              "kustoClusters": "dec",
                              "kustoClustersDatabases": "dedb",
                              "logicIntegrationAccounts": "ia-",
                              "logicWorkflows": "logic-",
                              "machineLearningServicesWorkspaces": "mlw-",
                              "managedIdentityUserAssignedIdentities": "id-",
                              "managementManagementGroups": "mg-",
                              "migrateAssessmentProjects": "migr-",
                              "networkApplicationGateways": "agw-",
                              "networkApplicationSecurityGroups": "asg-",
                              "networkAzureFirewalls": "afw-",
                              "networkBastionHosts": "bas-",
                              "networkConnections": "con-",
                              "networkDnsZones": "dnsz-",
                              "networkExpressRouteCircuits": "erc-",
                              "networkFirewallPolicies": "afwp-",
                              "networkFirewallPoliciesWebApplication": "waf",
                              "networkFirewallPoliciesRuleGroups": "wafrg",
                              "networkFrontDoors": "fd-",
                              "networkFrontdoorWebApplicationFirewallPolicies": "fdfp-",
                              "networkLoadBalancersExternal": "lbe-",
                              "networkLoadBalancersInternal": "lbi-",
                              "networkLoadBalancersInboundNatRules": "rule-",
                              "networkLocalNetworkGateways": "lgw-",
                              "networkNatGateways": "ng-",
                              "networkNetworkInterfaces": "nic-",
                              "networkNetworkSecurityGroups": "nsg-",
                              "networkNetworkSecurityGroupsSecurityRules": "nsgsr-",
                              "networkNetworkWatchers": "nw-",
                              "networkPrivateDnsZones": "pdnsz-",
                              "networkPrivateLinkServices": "pl-",
                              "networkPublicIPAddresses": "pip-",
                              "networkPublicIPPrefixes": "ippre-",
                              "networkRouteFilters": "rf-",
                              "networkRouteTables": "rt-",
                              "networkRouteTablesRoutes": "udr-",
                              "networkTrafficManagerProfiles": "traf-",
                              "networkVirtualNetworkGateways": "vgw-",
                              "networkVirtualNetworks": "vnet-",
                              "networkVirtualNetworksSubnets": "snet-",
                              "networkVirtualNetworksVirtualNetworkPeerings": "peer-",
                              "networkVirtualWans": "vwan-",
                              "networkVpnGateways": "vpng-",
                              "networkVpnGatewaysVpnConnections": "vcn-",
                              "networkVpnGatewaysVpnSites": "vst-",
                              "notificationHubsNamespaces": "ntfns-",
                              "notificationHubsNamespacesNotificationHubs": "ntf-",
                              "operationalInsightsWorkspaces": "log-",
                              "portalDashboards": "dash-",
                              "powerBIDedicatedCapacities": "pbi-",
                              "purviewAccounts": "pview-",
                              "recoveryServicesVaults": "rsv-",
                              "resourcesResourceGroups": "rg-",
                              "searchSearchServices": "srch-",
                              "serviceBusNamespaces": "sb-",
                              "serviceBusNamespacesQueues": "sbq-",
                              "serviceBusNamespacesTopics": "sbt-",
                              "serviceEndPointPolicies": "se-",
                              "serviceFabricClusters": "sf-",
                              "signalRServiceSignalR": "sigr",
                              "sqlManagedInstances": "sqlmi-",
                              "sqlServers": "sql-",
                              "sqlServersDataWarehouse": "sqldw-",
                              "sqlServersDatabases": "sqldb-",
                              "sqlServersDatabasesStretch": "sqlstrdb-",
                              "storageStorageAccounts": "st",
                              "storageStorageAccountsVm": "stvm",
                              "storSimpleManagers": "ssimp",
                              "streamAnalyticsCluster": "asa-",
                              "synapseWorkspaces": "syn",
                              "synapseWorkspacesAnalyticsWorkspaces": "synw",
                              "synapseWorkspacesSqlPoolsDedicated": "syndp",
                              "synapseWorkspacesSqlPoolsSpark": "synsp",
                              "timeSeriesInsightsEnvironments": "tsi-",
                              "webServerFarms": "plan-",
                              "webSitesAppService": "app-",
                              "webSitesAppServiceEnvironment": "ase-",
                              "webSitesFunctions": "func-",
                              "webStaticSites": "stapp-"
                            },
                            "abbrs": "[variables('$fxv#0')]",
                            "resourceToken": "[toLower(uniqueString(subscription().id, parameters('environmentName'), parameters('location')))]",
                            "tags": {
                              "azd-env-name": "[parameters('environmentName')]"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.OperationalInsights/workspaces",
                              "apiVersion": "2021-12-01-preview",
                              "name": "[format('{0}{1}', variables('abbrs').operationalInsightsWorkspaces, variables('resourceToken'))]",
                              "location": "[parameters('location')]",
                              "tags": "[variables('tags')]",
                              "properties": {
                                "retentionInDays": 30,
                                "features": {
                                  "searchVersion": 1
                                },
                                "sku": {
                                  "name": "PerGB2018"
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "logAnalyticsWorkspaceId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}{1}', variables('abbrs').operationalInsightsWorkspaces, variables('resourceToken')))]"
                            },
                            "logAnalyticsWorkspaceName": {
                              "type": "string",
                              "value": "[format('{0}{1}', variables('abbrs').operationalInsightsWorkspaces, variables('resourceToken'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "applicationinsights",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "environmentName": {
                            "value": "[parameters('environmentName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "logAnalyticsWorkspaceId": {
                            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'loganalytics')).outputs.logAnalyticsWorkspaceId.value]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.10.13.619",
                              "templateHash": "8592292164683562485"
                            }
                          },
                          "parameters": {
                            "environmentName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]"
                            },
                            "logAnalyticsWorkspaceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "$fxv#0": {
                              "analysisServicesServers": "as",
                              "apiManagementService": "apim-",
                              "appConfigurationConfigurationStores": "appcs-",
                              "appManagedEnvironments": "cae-",
                              "appContainerApps": "ca-",
                              "authorizationPolicyDefinitions": "policy-",
                              "automationAutomationAccounts": "aa-",
                              "blueprintBlueprints": "bp-",
                              "blueprintBlueprintsArtifacts": "bpa-",
                              "cacheRedis": "redis-",
                              "cdnProfiles": "cdnp-",
                              "cdnProfilesEndpoints": "cdne-",
                              "cognitiveServicesAccounts": "cog-",
                              "cognitiveServicesFormRecognizer": "cog-fr-",
                              "cognitiveServicesTextAnalytics": "cog-ta-",
                              "computeAvailabilitySets": "avail-",
                              "computeCloudServices": "cld-",
                              "computeDiskEncryptionSets": "des",
                              "computeDisks": "disk",
                              "computeDisksOs": "osdisk",
                              "computeGalleries": "gal",
                              "computeSnapshots": "snap-",
                              "computeVirtualMachines": "vm",
                              "computeVirtualMachineScaleSets": "vmss-",
                              "containerInstanceContainerGroups": "ci",
                              "containerRegistryRegistries": "cr",
                              "containerServiceManagedClusters": "aks-",
                              "databricksWorkspaces": "dbw-",
                              "dataFactoryFactories": "adf-",
                              "dataLakeAnalyticsAccounts": "dla",
                              "dataLakeStoreAccounts": "dls",
                              "dataMigrationServices": "dms-",
                              "dBforMySQLServers": "mysql-",
                              "dBforPostgreSQLServers": "psql-",
                              "devicesIotHubs": "iot-",
                              "devicesProvisioningServices": "provs-",
                              "devicesProvisioningServicesCertificates": "pcert-",
                              "documentDBDatabaseAccounts": "cosmos-",
                              "eventGridDomains": "evgd-",
                              "eventGridDomainsTopics": "evgt-",
                              "eventGridEventSubscriptions": "evgs-",
                              "eventHubNamespaces": "evhns-",
                              "eventHubNamespacesEventHubs": "evh-",
                              "hdInsightClustersHadoop": "hadoop-",
                              "hdInsightClustersHbase": "hbase-",
                              "hdInsightClustersKafka": "kafka-",
                              "hdInsightClustersMl": "mls-",
                              "hdInsightClustersSpark": "spark-",
                              "hdInsightClustersStorm": "storm-",
                              "hybridComputeMachines": "arcs-",
                              "insightsActionGroups": "ag-",
                              "insightsComponents": "appi-",
                              "keyVaultVaults": "kv-",
                              "kubernetesConnectedClusters": "arck",
                              "kustoClusters": "dec",
                              "kustoClustersDatabases": "dedb",
                              "logicIntegrationAccounts": "ia-",
                              "logicWorkflows": "logic-",
                              "machineLearningServicesWorkspaces": "mlw-",
                              "managedIdentityUserAssignedIdentities": "id-",
                              "managementManagementGroups": "mg-",
                              "migrateAssessmentProjects": "migr-",
                              "networkApplicationGateways": "agw-",
                              "networkApplicationSecurityGroups": "asg-",
                              "networkAzureFirewalls": "afw-",
                              "networkBastionHosts": "bas-",
                              "networkConnections": "con-",
                              "networkDnsZones": "dnsz-",
                              "networkExpressRouteCircuits": "erc-",
                              "networkFirewallPolicies": "afwp-",
                              "networkFirewallPoliciesWebApplication": "waf",
                              "networkFirewallPoliciesRuleGroups": "wafrg",
                              "networkFrontDoors": "fd-",
                              "networkFrontdoorWebApplicationFirewallPolicies": "fdfp-",
                              "networkLoadBalancersExternal": "lbe-",
                              "networkLoadBalancersInternal": "lbi-",
                              "networkLoadBalancersInboundNatRules": "rule-",
                              "networkLocalNetworkGateways": "lgw-",
                              "networkNatGateways": "ng-",
                              "networkNetworkInterfaces": "nic-",
                              "networkNetworkSecurityGroups": "nsg-",
                              "networkNetworkSecurityGroupsSecurityRules": "nsgsr-",
                              "networkNetworkWatchers": "nw-",
                              "networkPrivateDnsZones": "pdnsz-",
                              "networkPrivateLinkServices": "pl-",
                              "networkPublicIPAddresses": "pip-",
                              "networkPublicIPPrefixes": "ippre-",
                              "networkRouteFilters": "rf-",
                              "networkRouteTables": "rt-",
                              "networkRouteTablesRoutes": "udr-",
                              "networkTrafficManagerProfiles": "traf-",
                              "networkVirtualNetworkGateways": "vgw-",
                              "networkVirtualNetworks": "vnet-",
                              "networkVirtualNetworksSubnets": "snet-",
                              "networkVirtualNetworksVirtualNetworkPeerings": "peer-",
                              "networkVirtualWans": "vwan-",
                              "networkVpnGateways": "vpng-",
                              "networkVpnGatewaysVpnConnections": "vcn-",
                              "networkVpnGatewaysVpnSites": "vst-",
                              "notificationHubsNamespaces": "ntfns-",
                              "notificationHubsNamespacesNotificationHubs": "ntf-",
                              "operationalInsightsWorkspaces": "log-",
                              "portalDashboards": "dash-",
                              "powerBIDedicatedCapacities": "pbi-",
                              "purviewAccounts": "pview-",
                              "recoveryServicesVaults": "rsv-",
                              "resourcesResourceGroups": "rg-",
                              "searchSearchServices": "srch-",
                              "serviceBusNamespaces": "sb-",
                              "serviceBusNamespacesQueues": "sbq-",
                              "serviceBusNamespacesTopics": "sbt-",
                              "serviceEndPointPolicies": "se-",
                              "serviceFabricClusters": "sf-",
                              "signalRServiceSignalR": "sigr",
                              "sqlManagedInstances": "sqlmi-",
                              "sqlServers": "sql-",
                              "sqlServersDataWarehouse": "sqldw-",
                              "sqlServersDatabases": "sqldb-",
                              "sqlServersDatabasesStretch": "sqlstrdb-",
                              "storageStorageAccounts": "st",
                              "storageStorageAccountsVm": "stvm",
                              "storSimpleManagers": "ssimp",
                              "streamAnalyticsCluster": "asa-",
                              "synapseWorkspaces": "syn",
                              "synapseWorkspacesAnalyticsWorkspaces": "synw",
                              "synapseWorkspacesSqlPoolsDedicated": "syndp",
                              "synapseWorkspacesSqlPoolsSpark": "synsp",
                              "timeSeriesInsightsEnvironments": "tsi-",
                              "webServerFarms": "plan-",
                              "webSitesAppService": "app-",
                              "webSitesAppServiceEnvironment": "ase-",
                              "webSitesFunctions": "func-",
                              "webStaticSites": "stapp-"
                            },
                            "abbrs": "[variables('$fxv#0')]",
                            "resourceToken": "[toLower(uniqueString(subscription().id, parameters('environmentName'), parameters('location')))]",
                            "tags": {
                              "azd-env-name": "[parameters('environmentName')]"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Insights/components",
                              "apiVersion": "2020-02-02",
                              "name": "[format('{0}{1}', variables('abbrs').insightsComponents, variables('resourceToken'))]",
                              "location": "[parameters('location')]",
                              "tags": "[variables('tags')]",
                              "kind": "web",
                              "properties": {
                                "Application_Type": "web",
                                "WorkspaceResourceId": "[parameters('logAnalyticsWorkspaceId')]"
                              }
                            },
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "application-insights-dashboard",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "environmentName": {
                                    "value": "[parameters('environmentName')]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "applicationInsightsName": {
                                    "value": "[format('{0}{1}', variables('abbrs').insightsComponents, variables('resourceToken'))]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.10.13.619",
                                      "templateHash": "15436471675207083050"
                                    }
                                  },
                                  "parameters": {
                                    "environmentName": {
                                      "type": "string"
                                    },
                                    "location": {
                                      "type": "string",
                                      "defaultValue": "[resourceGroup().location]"
                                    },
                                    "applicationInsightsName": {
                                      "type": "string"
                                    }
                                  },
                                  "variables": {
                                    "$fxv#0": {
                                      "analysisServicesServers": "as",
                                      "apiManagementService": "apim-",
                                      "appConfigurationConfigurationStores": "appcs-",
                                      "appManagedEnvironments": "cae-",
                                      "appContainerApps": "ca-",
                                      "authorizationPolicyDefinitions": "policy-",
                                      "automationAutomationAccounts": "aa-",
                                      "blueprintBlueprints": "bp-",
                                      "blueprintBlueprintsArtifacts": "bpa-",
                                      "cacheRedis": "redis-",
                                      "cdnProfiles": "cdnp-",
                                      "cdnProfilesEndpoints": "cdne-",
                                      "cognitiveServicesAccounts": "cog-",
                                      "cognitiveServicesFormRecognizer": "cog-fr-",
                                      "cognitiveServicesTextAnalytics": "cog-ta-",
                                      "computeAvailabilitySets": "avail-",
                                      "computeCloudServices": "cld-",
                                      "computeDiskEncryptionSets": "des",
                                      "computeDisks": "disk",
                                      "computeDisksOs": "osdisk",
                                      "computeGalleries": "gal",
                                      "computeSnapshots": "snap-",
                                      "computeVirtualMachines": "vm",
                                      "computeVirtualMachineScaleSets": "vmss-",
                                      "containerInstanceContainerGroups": "ci",
                                      "containerRegistryRegistries": "cr",
                                      "containerServiceManagedClusters": "aks-",
                                      "databricksWorkspaces": "dbw-",
                                      "dataFactoryFactories": "adf-",
                                      "dataLakeAnalyticsAccounts": "dla",
                                      "dataLakeStoreAccounts": "dls",
                                      "dataMigrationServices": "dms-",
                                      "dBforMySQLServers": "mysql-",
                                      "dBforPostgreSQLServers": "psql-",
                                      "devicesIotHubs": "iot-",
                                      "devicesProvisioningServices": "provs-",
                                      "devicesProvisioningServicesCertificates": "pcert-",
                                      "documentDBDatabaseAccounts": "cosmos-",
                                      "eventGridDomains": "evgd-",
                                      "eventGridDomainsTopics": "evgt-",
                                      "eventGridEventSubscriptions": "evgs-",
                                      "eventHubNamespaces": "evhns-",
                                      "eventHubNamespacesEventHubs": "evh-",
                                      "hdInsightClustersHadoop": "hadoop-",
                                      "hdInsightClustersHbase": "hbase-",
                                      "hdInsightClustersKafka": "kafka-",
                                      "hdInsightClustersMl": "mls-",
                                      "hdInsightClustersSpark": "spark-",
                                      "hdInsightClustersStorm": "storm-",
                                      "hybridComputeMachines": "arcs-",
                                      "insightsActionGroups": "ag-",
                                      "insightsComponents": "appi-",
                                      "keyVaultVaults": "kv-",
                                      "kubernetesConnectedClusters": "arck",
                                      "kustoClusters": "dec",
                                      "kustoClustersDatabases": "dedb",
                                      "logicIntegrationAccounts": "ia-",
                                      "logicWorkflows": "logic-",
                                      "machineLearningServicesWorkspaces": "mlw-",
                                      "managedIdentityUserAssignedIdentities": "id-",
                                      "managementManagementGroups": "mg-",
                                      "migrateAssessmentProjects": "migr-",
                                      "networkApplicationGateways": "agw-",
                                      "networkApplicationSecurityGroups": "asg-",
                                      "networkAzureFirewalls": "afw-",
                                      "networkBastionHosts": "bas-",
                                      "networkConnections": "con-",
                                      "networkDnsZones": "dnsz-",
                                      "networkExpressRouteCircuits": "erc-",
                                      "networkFirewallPolicies": "afwp-",
                                      "networkFirewallPoliciesWebApplication": "waf",
                                      "networkFirewallPoliciesRuleGroups": "wafrg",
                                      "networkFrontDoors": "fd-",
                                      "networkFrontdoorWebApplicationFirewallPolicies": "fdfp-",
                                      "networkLoadBalancersExternal": "lbe-",
                                      "networkLoadBalancersInternal": "lbi-",
                                      "networkLoadBalancersInboundNatRules": "rule-",
                                      "networkLocalNetworkGateways": "lgw-",
                                      "networkNatGateways": "ng-",
                                      "networkNetworkInterfaces": "nic-",
                                      "networkNetworkSecurityGroups": "nsg-",
                                      "networkNetworkSecurityGroupsSecurityRules": "nsgsr-",
                                      "networkNetworkWatchers": "nw-",
                                      "networkPrivateDnsZones": "pdnsz-",
                                      "networkPrivateLinkServices": "pl-",
                                      "networkPublicIPAddresses": "pip-",
                                      "networkPublicIPPrefixes": "ippre-",
                                      "networkRouteFilters": "rf-",
                                      "networkRouteTables": "rt-",
                                      "networkRouteTablesRoutes": "udr-",
                                      "networkTrafficManagerProfiles": "traf-",
                                      "networkVirtualNetworkGateways": "vgw-",
                                      "networkVirtualNetworks": "vnet-",
                                      "networkVirtualNetworksSubnets": "snet-",
                                      "networkVirtualNetworksVirtualNetworkPeerings": "peer-",
                                      "networkVirtualWans": "vwan-",
                                      "networkVpnGateways": "vpng-",
                                      "networkVpnGatewaysVpnConnections": "vcn-",
                                      "networkVpnGatewaysVpnSites": "vst-",
                                      "notificationHubsNamespaces": "ntfns-",
                                      "notificationHubsNamespacesNotificationHubs": "ntf-",
                                      "operationalInsightsWorkspaces": "log-",
                                      "portalDashboards": "dash-",
                                      "powerBIDedicatedCapacities": "pbi-",
                                      "purviewAccounts": "pview-",
                                      "recoveryServicesVaults": "rsv-",
                                      "resourcesResourceGroups": "rg-",
                                      "searchSearchServices": "srch-",
                                      "serviceBusNamespaces": "sb-",
                                      "serviceBusNamespacesQueues": "sbq-",
                                      "serviceBusNamespacesTopics": "sbt-",
                                      "serviceEndPointPolicies": "se-",
                                      "serviceFabricClusters": "sf-",
                                      "signalRServiceSignalR": "sigr",
                                      "sqlManagedInstances": "sqlmi-",
                                      "sqlServers": "sql-",
                                      "sqlServersDataWarehouse": "sqldw-",
                                      "sqlServersDatabases": "sqldb-",
                                      "sqlServersDatabasesStretch": "sqlstrdb-",
                                      "storageStorageAccounts": "st",
                                      "storageStorageAccountsVm": "stvm",
                                      "storSimpleManagers": "ssimp",
                                      "streamAnalyticsCluster": "asa-",
                                      "synapseWorkspaces": "syn",
                                      "synapseWorkspacesAnalyticsWorkspaces": "synw",
                                      "synapseWorkspacesSqlPoolsDedicated": "syndp",
                                      "synapseWorkspacesSqlPoolsSpark": "synsp",
                                      "timeSeriesInsightsEnvironments": "tsi-",
                                      "webServerFarms": "plan-",
                                      "webSitesAppService": "app-",
                                      "webSitesAppServiceEnvironment": "ase-",
                                      "webSitesFunctions": "func-",
                                      "webStaticSites": "stapp-"
                                    },
                                    "abbrs": "[variables('$fxv#0')]",
                                    "resourceToken": "[toLower(uniqueString(subscription().id, parameters('environmentName'), parameters('location')))]",
                                    "tags": {
                                      "azd-env-name": "[parameters('environmentName')]"
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.Portal/dashboards",
                                      "apiVersion": "2020-09-01-preview",
                                      "name": "[format('{0}{1}', variables('abbrs').portalDashboards, variables('resourceToken'))]",
                                      "location": "[parameters('location')]",
                                      "tags": "[variables('tags')]",
                                      "properties": {
                                        "lenses": [
                                          {
                                            "order": 0,
                                            "parts": [
                                              {
                                                "position": {
                                                  "x": 0,
                                                  "y": 0,
                                                  "colSpan": 2,
                                                  "rowSpan": 1
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "id",
                                                      "value": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                    },
                                                    {
                                                      "name": "Version",
                                                      "value": "1.0"
                                                    }
                                                  ],
                                                  "type": "Extension/AppInsightsExtension/PartType/AspNetOverviewPinnedPart",
                                                  "asset": {
                                                    "idInputName": "id",
                                                    "type": "ApplicationInsights"
                                                  },
                                                  "defaultMenuItemId": "overview"
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 2,
                                                  "y": 0,
                                                  "colSpan": 1,
                                                  "rowSpan": 1
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "ComponentId",
                                                      "value": {
                                                        "Name": "[parameters('applicationInsightsName')]",
                                                        "SubscriptionId": "[subscription().subscriptionId]",
                                                        "ResourceGroup": "[resourceGroup().name]"
                                                      }
                                                    },
                                                    {
                                                      "name": "Version",
                                                      "value": "1.0"
                                                    }
                                                  ],
                                                  "type": "Extension/AppInsightsExtension/PartType/ProactiveDetectionAsyncPart",
                                                  "asset": {
                                                    "idInputName": "ComponentId",
                                                    "type": "ApplicationInsights"
                                                  },
                                                  "defaultMenuItemId": "ProactiveDetection"
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 3,
                                                  "y": 0,
                                                  "colSpan": 1,
                                                  "rowSpan": 1
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "ComponentId",
                                                      "value": {
                                                        "Name": "[parameters('applicationInsightsName')]",
                                                        "SubscriptionId": "[subscription().subscriptionId]",
                                                        "ResourceGroup": "[resourceGroup().name]"
                                                      }
                                                    },
                                                    {
                                                      "name": "ResourceId",
                                                      "value": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                    }
                                                  ],
                                                  "type": "Extension/AppInsightsExtension/PartType/QuickPulseButtonSmallPart",
                                                  "asset": {
                                                    "idInputName": "ComponentId",
                                                    "type": "ApplicationInsights"
                                                  }
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 4,
                                                  "y": 0,
                                                  "colSpan": 1,
                                                  "rowSpan": 1
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "ComponentId",
                                                      "value": {
                                                        "Name": "[parameters('applicationInsightsName')]",
                                                        "SubscriptionId": "[subscription().subscriptionId]",
                                                        "ResourceGroup": "[resourceGroup().name]"
                                                      }
                                                    },
                                                    {
                                                      "name": "TimeContext",
                                                      "value": {
                                                        "durationMs": 86400000,
                                                        "endTime": null,
                                                        "createdTime": "2018-05-04T01:20:33.345Z",
                                                        "isInitialTime": true,
                                                        "grain": 1,
                                                        "useDashboardTimeRange": false
                                                      }
                                                    },
                                                    {
                                                      "name": "Version",
                                                      "value": "1.0"
                                                    }
                                                  ],
                                                  "type": "Extension/AppInsightsExtension/PartType/AvailabilityNavButtonPart",
                                                  "asset": {
                                                    "idInputName": "ComponentId",
                                                    "type": "ApplicationInsights"
                                                  }
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 5,
                                                  "y": 0,
                                                  "colSpan": 1,
                                                  "rowSpan": 1
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "ComponentId",
                                                      "value": {
                                                        "Name": "[parameters('applicationInsightsName')]",
                                                        "SubscriptionId": "[subscription().subscriptionId]",
                                                        "ResourceGroup": "[resourceGroup().name]"
                                                      }
                                                    },
                                                    {
                                                      "name": "TimeContext",
                                                      "value": {
                                                        "durationMs": 86400000,
                                                        "endTime": null,
                                                        "createdTime": "2018-05-08T18:47:35.237Z",
                                                        "isInitialTime": true,
                                                        "grain": 1,
                                                        "useDashboardTimeRange": false
                                                      }
                                                    },
                                                    {
                                                      "name": "ConfigurationId",
                                                      "value": "78ce933e-e864-4b05-a27b-71fd55a6afad"
                                                    }
                                                  ],
                                                  "type": "Extension/AppInsightsExtension/PartType/AppMapButtonPart",
                                                  "asset": {
                                                    "idInputName": "ComponentId",
                                                    "type": "ApplicationInsights"
                                                  }
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 0,
                                                  "y": 1,
                                                  "colSpan": 3,
                                                  "rowSpan": 1
                                                },
                                                "metadata": {
                                                  "inputs": [],
                                                  "type": "Extension/HubsExtension/PartType/MarkdownPart",
                                                  "settings": {
                                                    "content": {
                                                      "settings": {
                                                        "content": "# Usage",
                                                        "title": "",
                                                        "subtitle": ""
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 3,
                                                  "y": 1,
                                                  "colSpan": 1,
                                                  "rowSpan": 1
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "ComponentId",
                                                      "value": {
                                                        "Name": "[parameters('applicationInsightsName')]",
                                                        "SubscriptionId": "[subscription().subscriptionId]",
                                                        "ResourceGroup": "[resourceGroup().name]"
                                                      }
                                                    },
                                                    {
                                                      "name": "TimeContext",
                                                      "value": {
                                                        "durationMs": 86400000,
                                                        "endTime": null,
                                                        "createdTime": "2018-05-04T01:22:35.782Z",
                                                        "isInitialTime": true,
                                                        "grain": 1,
                                                        "useDashboardTimeRange": false
                                                      }
                                                    }
                                                  ],
                                                  "type": "Extension/AppInsightsExtension/PartType/UsageUsersOverviewPart",
                                                  "asset": {
                                                    "idInputName": "ComponentId",
                                                    "type": "ApplicationInsights"
                                                  }
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 4,
                                                  "y": 1,
                                                  "colSpan": 3,
                                                  "rowSpan": 1
                                                },
                                                "metadata": {
                                                  "inputs": [],
                                                  "type": "Extension/HubsExtension/PartType/MarkdownPart",
                                                  "settings": {
                                                    "content": {
                                                      "settings": {
                                                        "content": "# Reliability",
                                                        "title": "",
                                                        "subtitle": ""
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 7,
                                                  "y": 1,
                                                  "colSpan": 1,
                                                  "rowSpan": 1
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "ResourceId",
                                                      "value": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                    },
                                                    {
                                                      "name": "DataModel",
                                                      "value": {
                                                        "version": "1.0.0",
                                                        "timeContext": {
                                                          "durationMs": 86400000,
                                                          "createdTime": "2018-05-04T23:42:40.072Z",
                                                          "isInitialTime": false,
                                                          "grain": 1,
                                                          "useDashboardTimeRange": false
                                                        }
                                                      },
                                                      "isOptional": true
                                                    },
                                                    {
                                                      "name": "ConfigurationId",
                                                      "value": "8a02f7bf-ac0f-40e1-afe9-f0e72cfee77f",
                                                      "isOptional": true
                                                    }
                                                  ],
                                                  "type": "Extension/AppInsightsExtension/PartType/CuratedBladeFailuresPinnedPart",
                                                  "isAdapter": true,
                                                  "asset": {
                                                    "idInputName": "ResourceId",
                                                    "type": "ApplicationInsights"
                                                  },
                                                  "defaultMenuItemId": "failures"
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 8,
                                                  "y": 1,
                                                  "colSpan": 3,
                                                  "rowSpan": 1
                                                },
                                                "metadata": {
                                                  "inputs": [],
                                                  "type": "Extension/HubsExtension/PartType/MarkdownPart",
                                                  "settings": {
                                                    "content": {
                                                      "settings": {
                                                        "content": "# Responsiveness\r\n",
                                                        "title": "",
                                                        "subtitle": ""
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 11,
                                                  "y": 1,
                                                  "colSpan": 1,
                                                  "rowSpan": 1
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "ResourceId",
                                                      "value": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                    },
                                                    {
                                                      "name": "DataModel",
                                                      "value": {
                                                        "version": "1.0.0",
                                                        "timeContext": {
                                                          "durationMs": 86400000,
                                                          "createdTime": "2018-05-04T23:43:37.804Z",
                                                          "isInitialTime": false,
                                                          "grain": 1,
                                                          "useDashboardTimeRange": false
                                                        }
                                                      },
                                                      "isOptional": true
                                                    },
                                                    {
                                                      "name": "ConfigurationId",
                                                      "value": "2a8ede4f-2bee-4b9c-aed9-2db0e8a01865",
                                                      "isOptional": true
                                                    }
                                                  ],
                                                  "type": "Extension/AppInsightsExtension/PartType/CuratedBladePerformancePinnedPart",
                                                  "isAdapter": true,
                                                  "asset": {
                                                    "idInputName": "ResourceId",
                                                    "type": "ApplicationInsights"
                                                  },
                                                  "defaultMenuItemId": "performance"
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 12,
                                                  "y": 1,
                                                  "colSpan": 3,
                                                  "rowSpan": 1
                                                },
                                                "metadata": {
                                                  "inputs": [],
                                                  "type": "Extension/HubsExtension/PartType/MarkdownPart",
                                                  "settings": {
                                                    "content": {
                                                      "settings": {
                                                        "content": "# Browser",
                                                        "title": "",
                                                        "subtitle": ""
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 15,
                                                  "y": 1,
                                                  "colSpan": 1,
                                                  "rowSpan": 1
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "ComponentId",
                                                      "value": {
                                                        "Name": "[parameters('applicationInsightsName')]",
                                                        "SubscriptionId": "[subscription().subscriptionId]",
                                                        "ResourceGroup": "[resourceGroup().name]"
                                                      }
                                                    },
                                                    {
                                                      "name": "MetricsExplorerJsonDefinitionId",
                                                      "value": "BrowserPerformanceTimelineMetrics"
                                                    },
                                                    {
                                                      "name": "TimeContext",
                                                      "value": {
                                                        "durationMs": 86400000,
                                                        "createdTime": "2018-05-08T12:16:27.534Z",
                                                        "isInitialTime": false,
                                                        "grain": 1,
                                                        "useDashboardTimeRange": false
                                                      }
                                                    },
                                                    {
                                                      "name": "CurrentFilter",
                                                      "value": {
                                                        "eventTypes": [
                                                          4,
                                                          1,
                                                          3,
                                                          5,
                                                          2,
                                                          6,
                                                          13
                                                        ],
                                                        "typeFacets": {},
                                                        "isPermissive": false
                                                      }
                                                    },
                                                    {
                                                      "name": "id",
                                                      "value": {
                                                        "Name": "[parameters('applicationInsightsName')]",
                                                        "SubscriptionId": "[subscription().subscriptionId]",
                                                        "ResourceGroup": "[resourceGroup().name]"
                                                      }
                                                    },
                                                    {
                                                      "name": "Version",
                                                      "value": "1.0"
                                                    }
                                                  ],
                                                  "type": "Extension/AppInsightsExtension/PartType/MetricsExplorerBladePinnedPart",
                                                  "asset": {
                                                    "idInputName": "ComponentId",
                                                    "type": "ApplicationInsights"
                                                  },
                                                  "defaultMenuItemId": "browser"
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 0,
                                                  "y": 2,
                                                  "colSpan": 4,
                                                  "rowSpan": 3
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "options",
                                                      "value": {
                                                        "chart": {
                                                          "metrics": [
                                                            {
                                                              "resourceMetadata": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                              },
                                                              "name": "sessions/count",
                                                              "aggregationType": 5,
                                                              "namespace": "microsoft.insights/components/kusto",
                                                              "metricVisualization": {
                                                                "displayName": "Sessions",
                                                                "color": "#47BDF5"
                                                              }
                                                            },
                                                            {
                                                              "resourceMetadata": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                              },
                                                              "name": "users/count",
                                                              "aggregationType": 5,
                                                              "namespace": "microsoft.insights/components/kusto",
                                                              "metricVisualization": {
                                                                "displayName": "Users",
                                                                "color": "#7E58FF"
                                                              }
                                                            }
                                                          ],
                                                          "title": "Unique sessions and users",
                                                          "visualization": {
                                                            "chartType": 2,
                                                            "legendVisualization": {
                                                              "isVisible": true,
                                                              "position": 2,
                                                              "hideSubtitle": false
                                                            },
                                                            "axisVisualization": {
                                                              "x": {
                                                                "isVisible": true,
                                                                "axisType": 2
                                                              },
                                                              "y": {
                                                                "isVisible": true,
                                                                "axisType": 1
                                                              }
                                                            }
                                                          },
                                                          "openBladeOnClick": {
                                                            "openBlade": true,
                                                            "destinationBlade": {
                                                              "extensionName": "HubsExtension",
                                                              "bladeName": "ResourceMenuBlade",
                                                              "parameters": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]",
                                                                "menuid": "segmentationUsers"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "name": "sharedTimeRange",
                                                      "isOptional": true
                                                    }
                                                  ],
                                                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                                  "settings": {}
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 4,
                                                  "y": 2,
                                                  "colSpan": 4,
                                                  "rowSpan": 3
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "options",
                                                      "value": {
                                                        "chart": {
                                                          "metrics": [
                                                            {
                                                              "resourceMetadata": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                              },
                                                              "name": "requests/failed",
                                                              "aggregationType": 7,
                                                              "namespace": "microsoft.insights/components",
                                                              "metricVisualization": {
                                                                "displayName": "Failed requests",
                                                                "color": "#EC008C"
                                                              }
                                                            }
                                                          ],
                                                          "title": "Failed requests",
                                                          "visualization": {
                                                            "chartType": 3,
                                                            "legendVisualization": {
                                                              "isVisible": true,
                                                              "position": 2,
                                                              "hideSubtitle": false
                                                            },
                                                            "axisVisualization": {
                                                              "x": {
                                                                "isVisible": true,
                                                                "axisType": 2
                                                              },
                                                              "y": {
                                                                "isVisible": true,
                                                                "axisType": 1
                                                              }
                                                            }
                                                          },
                                                          "openBladeOnClick": {
                                                            "openBlade": true,
                                                            "destinationBlade": {
                                                              "extensionName": "HubsExtension",
                                                              "bladeName": "ResourceMenuBlade",
                                                              "parameters": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]",
                                                                "menuid": "failures"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "name": "sharedTimeRange",
                                                      "isOptional": true
                                                    }
                                                  ],
                                                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                                  "settings": {}
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 8,
                                                  "y": 2,
                                                  "colSpan": 4,
                                                  "rowSpan": 3
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "options",
                                                      "value": {
                                                        "chart": {
                                                          "metrics": [
                                                            {
                                                              "resourceMetadata": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                              },
                                                              "name": "requests/duration",
                                                              "aggregationType": 4,
                                                              "namespace": "microsoft.insights/components",
                                                              "metricVisualization": {
                                                                "displayName": "Server response time",
                                                                "color": "#00BCF2"
                                                              }
                                                            }
                                                          ],
                                                          "title": "Server response time",
                                                          "visualization": {
                                                            "chartType": 2,
                                                            "legendVisualization": {
                                                              "isVisible": true,
                                                              "position": 2,
                                                              "hideSubtitle": false
                                                            },
                                                            "axisVisualization": {
                                                              "x": {
                                                                "isVisible": true,
                                                                "axisType": 2
                                                              },
                                                              "y": {
                                                                "isVisible": true,
                                                                "axisType": 1
                                                              }
                                                            }
                                                          },
                                                          "openBladeOnClick": {
                                                            "openBlade": true,
                                                            "destinationBlade": {
                                                              "extensionName": "HubsExtension",
                                                              "bladeName": "ResourceMenuBlade",
                                                              "parameters": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]",
                                                                "menuid": "performance"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "name": "sharedTimeRange",
                                                      "isOptional": true
                                                    }
                                                  ],
                                                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                                  "settings": {}
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 12,
                                                  "y": 2,
                                                  "colSpan": 4,
                                                  "rowSpan": 3
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "options",
                                                      "value": {
                                                        "chart": {
                                                          "metrics": [
                                                            {
                                                              "resourceMetadata": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                              },
                                                              "name": "browserTimings/networkDuration",
                                                              "aggregationType": 4,
                                                              "namespace": "microsoft.insights/components",
                                                              "metricVisualization": {
                                                                "displayName": "Page load network connect time",
                                                                "color": "#7E58FF"
                                                              }
                                                            },
                                                            {
                                                              "resourceMetadata": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                              },
                                                              "name": "browserTimings/processingDuration",
                                                              "aggregationType": 4,
                                                              "namespace": "microsoft.insights/components",
                                                              "metricVisualization": {
                                                                "displayName": "Client processing time",
                                                                "color": "#44F1C8"
                                                              }
                                                            },
                                                            {
                                                              "resourceMetadata": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                              },
                                                              "name": "browserTimings/sendDuration",
                                                              "aggregationType": 4,
                                                              "namespace": "microsoft.insights/components",
                                                              "metricVisualization": {
                                                                "displayName": "Send request time",
                                                                "color": "#EB9371"
                                                              }
                                                            },
                                                            {
                                                              "resourceMetadata": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                              },
                                                              "name": "browserTimings/receiveDuration",
                                                              "aggregationType": 4,
                                                              "namespace": "microsoft.insights/components",
                                                              "metricVisualization": {
                                                                "displayName": "Receiving response time",
                                                                "color": "#0672F1"
                                                              }
                                                            }
                                                          ],
                                                          "title": "Average page load time breakdown",
                                                          "visualization": {
                                                            "chartType": 3,
                                                            "legendVisualization": {
                                                              "isVisible": true,
                                                              "position": 2,
                                                              "hideSubtitle": false
                                                            },
                                                            "axisVisualization": {
                                                              "x": {
                                                                "isVisible": true,
                                                                "axisType": 2
                                                              },
                                                              "y": {
                                                                "isVisible": true,
                                                                "axisType": 1
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "name": "sharedTimeRange",
                                                      "isOptional": true
                                                    }
                                                  ],
                                                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                                  "settings": {}
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 0,
                                                  "y": 5,
                                                  "colSpan": 4,
                                                  "rowSpan": 3
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "options",
                                                      "value": {
                                                        "chart": {
                                                          "metrics": [
                                                            {
                                                              "resourceMetadata": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                              },
                                                              "name": "availabilityResults/availabilityPercentage",
                                                              "aggregationType": 4,
                                                              "namespace": "microsoft.insights/components",
                                                              "metricVisualization": {
                                                                "displayName": "Availability",
                                                                "color": "#47BDF5"
                                                              }
                                                            }
                                                          ],
                                                          "title": "Average availability",
                                                          "visualization": {
                                                            "chartType": 3,
                                                            "legendVisualization": {
                                                              "isVisible": true,
                                                              "position": 2,
                                                              "hideSubtitle": false
                                                            },
                                                            "axisVisualization": {
                                                              "x": {
                                                                "isVisible": true,
                                                                "axisType": 2
                                                              },
                                                              "y": {
                                                                "isVisible": true,
                                                                "axisType": 1
                                                              }
                                                            }
                                                          },
                                                          "openBladeOnClick": {
                                                            "openBlade": true,
                                                            "destinationBlade": {
                                                              "extensionName": "HubsExtension",
                                                              "bladeName": "ResourceMenuBlade",
                                                              "parameters": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]",
                                                                "menuid": "availability"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "name": "sharedTimeRange",
                                                      "isOptional": true
                                                    }
                                                  ],
                                                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                                  "settings": {}
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 4,
                                                  "y": 5,
                                                  "colSpan": 4,
                                                  "rowSpan": 3
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "options",
                                                      "value": {
                                                        "chart": {
                                                          "metrics": [
                                                            {
                                                              "resourceMetadata": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                              },
                                                              "name": "exceptions/server",
                                                              "aggregationType": 7,
                                                              "namespace": "microsoft.insights/components",
                                                              "metricVisualization": {
                                                                "displayName": "Server exceptions",
                                                                "color": "#47BDF5"
                                                              }
                                                            },
                                                            {
                                                              "resourceMetadata": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                              },
                                                              "name": "dependencies/failed",
                                                              "aggregationType": 7,
                                                              "namespace": "microsoft.insights/components",
                                                              "metricVisualization": {
                                                                "displayName": "Dependency failures",
                                                                "color": "#7E58FF"
                                                              }
                                                            }
                                                          ],
                                                          "title": "Server exceptions and Dependency failures",
                                                          "visualization": {
                                                            "chartType": 2,
                                                            "legendVisualization": {
                                                              "isVisible": true,
                                                              "position": 2,
                                                              "hideSubtitle": false
                                                            },
                                                            "axisVisualization": {
                                                              "x": {
                                                                "isVisible": true,
                                                                "axisType": 2
                                                              },
                                                              "y": {
                                                                "isVisible": true,
                                                                "axisType": 1
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "name": "sharedTimeRange",
                                                      "isOptional": true
                                                    }
                                                  ],
                                                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                                  "settings": {}
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 8,
                                                  "y": 5,
                                                  "colSpan": 4,
                                                  "rowSpan": 3
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "options",
                                                      "value": {
                                                        "chart": {
                                                          "metrics": [
                                                            {
                                                              "resourceMetadata": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                              },
                                                              "name": "performanceCounters/processorCpuPercentage",
                                                              "aggregationType": 4,
                                                              "namespace": "microsoft.insights/components",
                                                              "metricVisualization": {
                                                                "displayName": "Processor time",
                                                                "color": "#47BDF5"
                                                              }
                                                            },
                                                            {
                                                              "resourceMetadata": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                              },
                                                              "name": "performanceCounters/processCpuPercentage",
                                                              "aggregationType": 4,
                                                              "namespace": "microsoft.insights/components",
                                                              "metricVisualization": {
                                                                "displayName": "Process CPU",
                                                                "color": "#7E58FF"
                                                              }
                                                            }
                                                          ],
                                                          "title": "Average processor and process CPU utilization",
                                                          "visualization": {
                                                            "chartType": 2,
                                                            "legendVisualization": {
                                                              "isVisible": true,
                                                              "position": 2,
                                                              "hideSubtitle": false
                                                            },
                                                            "axisVisualization": {
                                                              "x": {
                                                                "isVisible": true,
                                                                "axisType": 2
                                                              },
                                                              "y": {
                                                                "isVisible": true,
                                                                "axisType": 1
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "name": "sharedTimeRange",
                                                      "isOptional": true
                                                    }
                                                  ],
                                                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                                  "settings": {}
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 12,
                                                  "y": 5,
                                                  "colSpan": 4,
                                                  "rowSpan": 3
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "options",
                                                      "value": {
                                                        "chart": {
                                                          "metrics": [
                                                            {
                                                              "resourceMetadata": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                              },
                                                              "name": "exceptions/browser",
                                                              "aggregationType": 7,
                                                              "namespace": "microsoft.insights/components",
                                                              "metricVisualization": {
                                                                "displayName": "Browser exceptions",
                                                                "color": "#47BDF5"
                                                              }
                                                            }
                                                          ],
                                                          "title": "Browser exceptions",
                                                          "visualization": {
                                                            "chartType": 2,
                                                            "legendVisualization": {
                                                              "isVisible": true,
                                                              "position": 2,
                                                              "hideSubtitle": false
                                                            },
                                                            "axisVisualization": {
                                                              "x": {
                                                                "isVisible": true,
                                                                "axisType": 2
                                                              },
                                                              "y": {
                                                                "isVisible": true,
                                                                "axisType": 1
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "name": "sharedTimeRange",
                                                      "isOptional": true
                                                    }
                                                  ],
                                                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                                  "settings": {}
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 0,
                                                  "y": 8,
                                                  "colSpan": 4,
                                                  "rowSpan": 3
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "options",
                                                      "value": {
                                                        "chart": {
                                                          "metrics": [
                                                            {
                                                              "resourceMetadata": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                              },
                                                              "name": "availabilityResults/count",
                                                              "aggregationType": 7,
                                                              "namespace": "microsoft.insights/components",
                                                              "metricVisualization": {
                                                                "displayName": "Availability test results count",
                                                                "color": "#47BDF5"
                                                              }
                                                            }
                                                          ],
                                                          "title": "Availability test results count",
                                                          "visualization": {
                                                            "chartType": 2,
                                                            "legendVisualization": {
                                                              "isVisible": true,
                                                              "position": 2,
                                                              "hideSubtitle": false
                                                            },
                                                            "axisVisualization": {
                                                              "x": {
                                                                "isVisible": true,
                                                                "axisType": 2
                                                              },
                                                              "y": {
                                                                "isVisible": true,
                                                                "axisType": 1
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "name": "sharedTimeRange",
                                                      "isOptional": true
                                                    }
                                                  ],
                                                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                                  "settings": {}
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 4,
                                                  "y": 8,
                                                  "colSpan": 4,
                                                  "rowSpan": 3
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "options",
                                                      "value": {
                                                        "chart": {
                                                          "metrics": [
                                                            {
                                                              "resourceMetadata": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                              },
                                                              "name": "performanceCounters/processIOBytesPerSecond",
                                                              "aggregationType": 4,
                                                              "namespace": "microsoft.insights/components",
                                                              "metricVisualization": {
                                                                "displayName": "Process IO rate",
                                                                "color": "#47BDF5"
                                                              }
                                                            }
                                                          ],
                                                          "title": "Average process I/O rate",
                                                          "visualization": {
                                                            "chartType": 2,
                                                            "legendVisualization": {
                                                              "isVisible": true,
                                                              "position": 2,
                                                              "hideSubtitle": false
                                                            },
                                                            "axisVisualization": {
                                                              "x": {
                                                                "isVisible": true,
                                                                "axisType": 2
                                                              },
                                                              "y": {
                                                                "isVisible": true,
                                                                "axisType": 1
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "name": "sharedTimeRange",
                                                      "isOptional": true
                                                    }
                                                  ],
                                                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                                  "settings": {}
                                                }
                                              },
                                              {
                                                "position": {
                                                  "x": 8,
                                                  "y": 8,
                                                  "colSpan": 4,
                                                  "rowSpan": 3
                                                },
                                                "metadata": {
                                                  "inputs": [
                                                    {
                                                      "name": "options",
                                                      "value": {
                                                        "chart": {
                                                          "metrics": [
                                                            {
                                                              "resourceMetadata": {
                                                                "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                              },
                                                              "name": "performanceCounters/memoryAvailableBytes",
                                                              "aggregationType": 4,
                                                              "namespace": "microsoft.insights/components",
                                                              "metricVisualization": {
                                                                "displayName": "Available memory",
                                                                "color": "#47BDF5"
                                                              }
                                                            }
                                                          ],
                                                          "title": "Average available memory",
                                                          "visualization": {
                                                            "chartType": 2,
                                                            "legendVisualization": {
                                                              "isVisible": true,
                                                              "position": 2,
                                                              "hideSubtitle": false
                                                            },
                                                            "axisVisualization": {
                                                              "x": {
                                                                "isVisible": true,
                                                                "axisType": 2
                                                              },
                                                              "y": {
                                                                "isVisible": true,
                                                                "axisType": 1
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "name": "sharedTimeRange",
                                                      "isOptional": true
                                                    }
                                                  ],
                                                  "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                                  "settings": {}
                                                }
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Insights/components', format('{0}{1}', variables('abbrs').insightsComponents, variables('resourceToken')))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "applicationInsightsConnectionString": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.Insights/components', format('{0}{1}', variables('abbrs').insightsComponents, variables('resourceToken')))).ConnectionString]"
                            },
                            "applicationInsightsName": {
                              "type": "string",
                              "value": "[format('{0}{1}', variables('abbrs').insightsComponents, variables('resourceToken'))]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', 'loganalytics')]"
                      ]
                    }
                  ],
                  "outputs": {
                    "applicationInsightsConnectionString": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'applicationinsights')).outputs.applicationInsightsConnectionString.value]"
                    },
                    "applicationInsightsName": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'applicationinsights')).outputs.applicationInsightsName.value]"
                    },
                    "logAnalyticsWorkspaceId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'loganalytics')).outputs.logAnalyticsWorkspaceId.value]"
                    },
                    "logAnalyticsWorkspaceName": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'loganalytics')).outputs.logAnalyticsWorkspaceName.value]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "API_URI": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'api')).outputs.API_URI.value]"
            },
            "APPLICATIONINSIGHTS_CONNECTION_STRING": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'monitoring')).outputs.applicationInsightsConnectionString.value]"
            },
            "AZURE_COSMOS_CONNECTION_STRING_KEY": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos')).outputs.cosmosConnectionStringKey.value]"
            },
            "AZURE_COSMOS_DATABASE_NAME": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos')).outputs.cosmosDatabaseName.value]"
            },
            "AZURE_COSMOS_ENDPOINT": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos')).outputs.cosmosEndpoint.value]"
            },
            "AZURE_KEY_VAULT_ENDPOINT": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyvault')).outputs.keyVaultEndpoint.value]"
            },
            "WEB_URI": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'web')).outputs.WEB_URI.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]"
      ]
    }
  ],
  "outputs": {
    "APPLICATIONINSIGHTS_CONNECTION_STRING": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources')).outputs.APPLICATIONINSIGHTS_CONNECTION_STRING.value]"
    },
    "AZURE_COSMOS_ENDPOINT": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources')).outputs.AZURE_COSMOS_ENDPOINT.value]"
    },
    "AZURE_COSMOS_DATABASE_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources')).outputs.AZURE_COSMOS_DATABASE_NAME.value]"
    },
    "AZURE_LOCATION": {
      "type": "string",
      "value": "[parameters('location')]"
    },
    "AZURE_TENANT_ID": {
      "type": "string",
      "value": "[tenant().tenantId]"
    },
    "REACT_APP_API_BASE_URL": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources')).outputs.API_URI.value]"
    },
    "REACT_APP_APPLICATIONINSIGHTS_CONNECTION_STRING": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources')).outputs.APPLICATIONINSIGHTS_CONNECTION_STRING.value]"
    },
    "REACT_APP_WEB_BASE_URL": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources')).outputs.WEB_URI.value]"
    }
  }
}